{"ast":null,"code":"import{useState}from\"react\";import{Card,CardContent}from\"./components/ui/card\";import{Button}from\"./components/ui/button\";import ThemeToggle from\"./components/ui/ThemeToggle\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const flashcards=[{question:\"O que são dados?\",answer:\"Representações brutas de fatos, como números, nomes ou imagens, que sozinhos não têm significado.\"},{question:\"O que é informação?\",answer:\"Resultado da análise ou processamento dos dados, fornecendo contexto e significado.\"},{question:\"O que é um banco de dados?\",answer:\"Coleção organizada de dados persistentes, usados para armazenar e recuperar informações.\"},{question:\"O que é um SGBD?\",answer:\"Sistema de Gerenciamento de Banco de Dados, software que manipula e controla o acesso aos dados.\"},{question:\"Quais os níveis de abstração de um BD?\",answer:\"Conceitual (significado dos dados), Lógico (estrutura relacional) e Físico (armazenamento).\"},{question:\"O que é uma transação?\",answer:\"Conjunto de operações que realizam uma função lógica completa no banco de dados.\"},{question:\"O que significa ACID?\",answer:\"Conjunto de propriedades das transações: Atomicidade, Consistência, Isolamento e Durabilidade.\"},{question:\"Defina Atomicidade\",answer:\"Transações são indivisíveis: ou ocorrem completamente ou não ocorrem.\"},{question:\"Defina Consistência\",answer:\"Transações mantêm o banco de dados em um estado válido.\"},{question:\"Defina Isolamento\",answer:\"Transações simultâneas não interferem entre si.\"},{question:\"Defina Durabilidade\",answer:\"Transações concluídas permanecem no banco mesmo após falhas.\"},{question:\"O que é uma entidade?\",answer:\"Objeto do mundo real representado no banco, como Pessoa ou Produto.\"},{question:\"O que é uma entidade forte?\",answer:\"Entidade que existe independentemente de outras.\"},{question:\"O que é uma entidade fraca?\",answer:\"Entidade que depende de outra para existir.\"},{question:\"O que é um relacionamento?\",answer:\"Associação entre duas ou mais entidades.\"},{question:\"O que é um relacionamento identificador?\",answer:\"Relacionamento entre entidade forte e entidade fraca.\"},{question:\"O que é cardinalidade?\",answer:\"Define o número de ocorrências entre entidades (1:1, 1:N, N:N).\"},{question:\"O que é um atributo?\",answer:\"Característica de uma entidade ou relacionamento.\"},{question:\"O que é um atributo identificador?\",answer:\"Atributo que diferencia cada ocorrência (ex: id, RA).\"},{question:\"O que é um atributo composto?\",answer:\"Atributo formado por subatributos (ex: endereço → rua, cidade).\"},{question:\"O que é um atributo multivalorado?\",answer:\"Atributo que pode ter vários valores (ex: telefone).\"},{question:\"O que é generalização e especialização?\",answer:\"Relação entre entidade genérica e suas versões específicas (Pessoa → Aluno, Professor).\"}];export default function FlashcardsApp(){const[index,setIndex]=useState(0);const[showAnswer,setShowAnswer]=useState(false);const[isQuizMode,setIsQuizMode]=useState(false);const[quizResults,setQuizResults]=useState({correct:0,incorrect:0});const[quizCompleted,setQuizCompleted]=useState(false);const[options,setOptions]=useState([]);// Função para embaralhar um array\nconst shuffleArray=array=>array.sort(()=>Math.random()-0.5);// Gerar opções de resposta para o modo prova\nconst generateOptions=()=>{const correctAnswer=flashcards[index].answer;const incorrectAnswers=flashcards.filter((_,i)=>i!==index)// Exclui a resposta correta\n.map(card=>card.answer);const randomIncorrectAnswers=shuffleArray(incorrectAnswers).slice(0,3);// Seleciona 3 respostas erradas\nconst allOptions=shuffleArray([correctAnswer,...randomIncorrectAnswers]);// Embaralha as opções\nsetOptions(allOptions);};// Alternar para o modo prova\nconst startQuizMode=()=>{setIsQuizMode(true);setQuizResults({correct:0,incorrect:0});setQuizCompleted(false);setIndex(0);generateOptions();};// Verificar a resposta do usuário\nconst handleAnswer=selectedOption=>{const correctAnswer=flashcards[index].answer;if(selectedOption===correctAnswer){setQuizResults(prev=>({...prev,correct:prev.correct+1}));}else{setQuizResults(prev=>({...prev,incorrect:prev.incorrect+1}));}// Avançar para a próxima questão ou finalizar o quiz\nif(index+1<flashcards.length){setIndex(prev=>prev+1);generateOptions();}else{setQuizCompleted(true);}};// Sair do modo prova\nconst exitQuizMode=()=>{setIsQuizMode(false);setQuizResults({correct:0,incorrect:0});setQuizCompleted(false);setIndex(0);setShowAnswer(false);// Oculta a resposta ao sair do modo prova\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsx(ThemeToggle,{})}),!isQuizMode&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl text-center shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:flashcards[index].question}),showAnswer&&/*#__PURE__*/_jsx(\"p\",{className:\"text-base p-4 rounded-md bg-gray-50 text-gray-700 dark:bg-dark-surface dark:text-dark-text-secondary\",children:flashcards[index].answer})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>setIndex(prev=>(prev-1+flashcards.length)%flashcards.length),children:\"Anterior\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setShowAnswer(!showAnswer),children:showAnswer?\"Ocultar Resposta\":\"Mostrar Resposta\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>setIndex(prev=>(prev+1)%flashcards.length),children:\"Pr\\xF3ximo\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"default\",onClick:startQuizMode,children:\"Iniciar Modo Prova\"})]}),isQuizMode&&!quizCompleted&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl text-center shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:flashcards[index].question}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-2\",children:options.map((option,i)=>/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>handleAnswer(option),children:option},i))})]})})}),quizCompleted&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:\"Resultados do Quiz\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg\",children:[\"Acertos: \",quizResults.correct]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg\",children:[\"Erros: \",quizResults.incorrect]}),/*#__PURE__*/_jsx(Button,{variant:\"default\",onClick:exitQuizMode,children:\"Sair do Modo Prova\"})]})]});}","map":{"version":3,"names":["useState","Card","CardContent","Button","ThemeToggle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","flashcards","question","answer","FlashcardsApp","index","setIndex","showAnswer","setShowAnswer","isQuizMode","setIsQuizMode","quizResults","setQuizResults","correct","incorrect","quizCompleted","setQuizCompleted","options","setOptions","shuffleArray","array","sort","Math","random","generateOptions","correctAnswer","incorrectAnswers","filter","_","i","map","card","randomIncorrectAnswers","slice","allOptions","startQuizMode","handleAnswer","selectedOption","prev","length","exitQuizMode","className","children","variant","onClick","option"],"sources":["C:/Users/jonat/OneDrive/Documentos/Projetos Pessoais/Flashcards/flashcards/src/FlashcardsApp.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Card, CardContent } from \"./components/ui/card\";\r\nimport { Button } from \"./components/ui/button\";\r\nimport ThemeToggle from \"./components/ui/ThemeToggle\";\r\n\r\nconst flashcards = [\r\n    { question: \"O que são dados?\", answer: \"Representações brutas de fatos, como números, nomes ou imagens, que sozinhos não têm significado.\" },\r\n    { question: \"O que é informação?\", answer: \"Resultado da análise ou processamento dos dados, fornecendo contexto e significado.\" },\r\n    { question: \"O que é um banco de dados?\", answer: \"Coleção organizada de dados persistentes, usados para armazenar e recuperar informações.\" },\r\n    { question: \"O que é um SGBD?\", answer: \"Sistema de Gerenciamento de Banco de Dados, software que manipula e controla o acesso aos dados.\" },\r\n    { question: \"Quais os níveis de abstração de um BD?\", answer: \"Conceitual (significado dos dados), Lógico (estrutura relacional) e Físico (armazenamento).\" },\r\n    { question: \"O que é uma transação?\", answer: \"Conjunto de operações que realizam uma função lógica completa no banco de dados.\" },\r\n    { question: \"O que significa ACID?\", answer: \"Conjunto de propriedades das transações: Atomicidade, Consistência, Isolamento e Durabilidade.\" },\r\n    { question: \"Defina Atomicidade\", answer: \"Transações são indivisíveis: ou ocorrem completamente ou não ocorrem.\" },\r\n    { question: \"Defina Consistência\", answer: \"Transações mantêm o banco de dados em um estado válido.\" },\r\n    { question: \"Defina Isolamento\", answer: \"Transações simultâneas não interferem entre si.\" },\r\n    { question: \"Defina Durabilidade\", answer: \"Transações concluídas permanecem no banco mesmo após falhas.\" },\r\n    { question: \"O que é uma entidade?\", answer: \"Objeto do mundo real representado no banco, como Pessoa ou Produto.\" },\r\n    { question: \"O que é uma entidade forte?\", answer: \"Entidade que existe independentemente de outras.\" },\r\n    { question: \"O que é uma entidade fraca?\", answer: \"Entidade que depende de outra para existir.\" },\r\n    { question: \"O que é um relacionamento?\", answer: \"Associação entre duas ou mais entidades.\" },\r\n    { question: \"O que é um relacionamento identificador?\", answer: \"Relacionamento entre entidade forte e entidade fraca.\" },\r\n    { question: \"O que é cardinalidade?\", answer: \"Define o número de ocorrências entre entidades (1:1, 1:N, N:N).\" },\r\n    { question: \"O que é um atributo?\", answer: \"Característica de uma entidade ou relacionamento.\" },\r\n    { question: \"O que é um atributo identificador?\", answer: \"Atributo que diferencia cada ocorrência (ex: id, RA).\" },\r\n    { question: \"O que é um atributo composto?\", answer: \"Atributo formado por subatributos (ex: endereço → rua, cidade).\" },\r\n    { question: \"O que é um atributo multivalorado?\", answer: \"Atributo que pode ter vários valores (ex: telefone).\" },\r\n    { question: \"O que é generalização e especialização?\", answer: \"Relação entre entidade genérica e suas versões específicas (Pessoa → Aluno, Professor).\" },\r\n  ];\r\n\r\nexport default function FlashcardsApp() {\r\n  const [index, setIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isQuizMode, setIsQuizMode] = useState(false);\r\n  const [quizResults, setQuizResults] = useState({ correct: 0, incorrect: 0 });\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  // Função para embaralhar um array\r\n  const shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\n  // Gerar opções de resposta para o modo prova\r\n  const generateOptions = () => {\r\n    const correctAnswer = flashcards[index].answer;\r\n    const incorrectAnswers = flashcards\r\n      .filter((_, i) => i !== index) // Exclui a resposta correta\r\n      .map((card) => card.answer);\r\n    const randomIncorrectAnswers = shuffleArray(incorrectAnswers).slice(0, 3); // Seleciona 3 respostas erradas\r\n    const allOptions = shuffleArray([correctAnswer, ...randomIncorrectAnswers]); // Embaralha as opções\r\n    setOptions(allOptions);\r\n  };\r\n\r\n  // Alternar para o modo prova\r\n  const startQuizMode = () => {\r\n    setIsQuizMode(true);\r\n    setQuizResults({ correct: 0, incorrect: 0 });\r\n    setQuizCompleted(false);\r\n    setIndex(0);\r\n    generateOptions();\r\n  };\r\n\r\n  // Verificar a resposta do usuário\r\n  const handleAnswer = (selectedOption) => {\r\n    const correctAnswer = flashcards[index].answer;\r\n    if (selectedOption === correctAnswer) {\r\n      setQuizResults((prev) => ({ ...prev, correct: prev.correct + 1 }));\r\n    } else {\r\n      setQuizResults((prev) => ({ ...prev, incorrect: prev.incorrect + 1 }));\r\n    }\r\n\r\n    // Avançar para a próxima questão ou finalizar o quiz\r\n    if (index + 1 < flashcards.length) {\r\n      setIndex((prev) => prev + 1);\r\n      generateOptions();\r\n    } else {\r\n      setQuizCompleted(true);\r\n    }\r\n  };\r\n\r\n  // Sair do modo prova\r\n  const exitQuizMode = () => {\r\n    setIsQuizMode(false);\r\n    setQuizResults({ correct: 0, incorrect: 0 });\r\n    setQuizCompleted(false);\r\n    setIndex(0);\r\n    setShowAnswer(false); // Oculta a resposta ao sair do modo prova\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <ThemeToggle />\r\n      </div>\r\n\r\n      {!isQuizMode && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">{flashcards[index].question}</h2>\r\n              {showAnswer && (\r\n                <p className=\"text-base p-4 rounded-md bg-gray-50 text-gray-700 dark:bg-dark-surface dark:text-dark-text-secondary\">\r\n                  {flashcards[index].answer}\r\n                </p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <div className=\"flex gap-4\">\r\n            <Button variant=\"outline\" onClick={() => setIndex((prev) => (prev - 1 + flashcards.length) % flashcards.length)}>\r\n              Anterior\r\n            </Button>\r\n            <Button onClick={() => setShowAnswer(!showAnswer)}>\r\n              {showAnswer ? \"Ocultar Resposta\" : \"Mostrar Resposta\"}\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={() => setIndex((prev) => (prev + 1) % flashcards.length)}>\r\n              Próximo\r\n            </Button>\r\n          </div>\r\n\r\n          <Button variant=\"default\" onClick={startQuizMode}>\r\n            Iniciar Modo Prova\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {isQuizMode && !quizCompleted && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">{flashcards[index].question}</h2>\r\n              <div className=\"flex flex-col gap-2\">\r\n                {options.map((option, i) => (\r\n                  <Button key={i} variant=\"outline\" onClick={() => handleAnswer(option)}>\r\n                    {option}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </>\r\n      )}\r\n\r\n      {quizCompleted && (\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-2xl font-bold\">Resultados do Quiz</h2>\r\n          <p className=\"text-lg\">Acertos: {quizResults.correct}</p>\r\n          <p className=\"text-lg\">Erros: {quizResults.incorrect}</p>\r\n          <Button variant=\"default\" onClick={exitQuizMode}>\r\n            Sair do Modo Prova\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}