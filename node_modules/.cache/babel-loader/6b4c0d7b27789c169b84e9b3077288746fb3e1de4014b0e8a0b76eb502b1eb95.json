{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Documentos\\\\Projetos Pessoais\\\\Flashcards\\\\flashcards\\\\src\\\\FlashcardsApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card\";\nimport { Button } from \"./components/ui/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flashcards = [{\n  question: \"O que são dados?\",\n  answer: \"Representações brutas de fatos, como números, nomes ou imagens, que sozinhos não têm significado.\"\n}, {\n  question: \"O que é informação?\",\n  answer: \"Resultado da análise ou processamento dos dados, fornecendo contexto e significado.\"\n}, {\n  question: \"O que é um banco de dados?\",\n  answer: \"Coleção organizada de dados persistentes, usados para armazenar e recuperar informações.\"\n}, {\n  question: \"O que é um SGBD?\",\n  answer: \"Sistema de Gerenciamento de Banco de Dados, software que manipula e controla o acesso aos dados.\"\n}, {\n  question: \"Quais os níveis de abstração de um BD?\",\n  answer: \"Conceitual (significado dos dados), Lógico (estrutura relacional) e Físico (armazenamento).\"\n}, {\n  question: \"O que é uma transação?\",\n  answer: \"Conjunto de operações que realizam uma função lógica completa no banco de dados.\"\n}, {\n  question: \"O que significa ACID?\",\n  answer: \"Conjunto de propriedades das transações: Atomicidade, Consistência, Isolamento e Durabilidade.\"\n}, {\n  question: \"Defina Atomicidade\",\n  answer: \"Transações são indivisíveis: ou ocorrem completamente ou não ocorrem.\"\n}, {\n  question: \"Defina Consistência\",\n  answer: \"Transações mantêm o banco de dados em um estado válido.\"\n}, {\n  question: \"Defina Isolamento\",\n  answer: \"Transações simultâneas não interferem entre si.\"\n}, {\n  question: \"Defina Durabilidade\",\n  answer: \"Transações concluídas permanecem no banco mesmo após falhas.\"\n}, {\n  question: \"O que é uma entidade?\",\n  answer: \"Objeto do mundo real representado no banco, como Pessoa ou Produto.\"\n}, {\n  question: \"O que é uma entidade forte?\",\n  answer: \"Entidade que existe independentemente de outras.\"\n}, {\n  question: \"O que é uma entidade fraca?\",\n  answer: \"Entidade que depende de outra para existir.\"\n}, {\n  question: \"O que é um relacionamento?\",\n  answer: \"Associação entre duas ou mais entidades.\"\n}, {\n  question: \"O que é um relacionamento identificador?\",\n  answer: \"Relacionamento entre entidade forte e entidade fraca.\"\n}, {\n  question: \"O que é cardinalidade?\",\n  answer: \"Define o número de ocorrências entre entidades (1:1, 1:N, N:N).\"\n}, {\n  question: \"O que é um atributo?\",\n  answer: \"Característica de uma entidade ou relacionamento.\"\n}, {\n  question: \"O que é um atributo identificador?\",\n  answer: \"Atributo que diferencia cada ocorrência (ex: id, RA).\"\n}, {\n  question: \"O que é um atributo composto?\",\n  answer: \"Atributo formado por subatributos (ex: endereço → rua, cidade).\"\n}, {\n  question: \"O que é um atributo multivalorado?\",\n  answer: \"Atributo que pode ter vários valores (ex: telefone).\"\n}, {\n  question: \"O que é generalização e especialização?\",\n  answer: \"Relação entre entidade genérica e suas versões específicas (Pessoa → Aluno, Professor).\"\n}];\nexport default function FlashcardsApp() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const next = () => {\n    setShowAnswer(false);\n    setIndex(prev => (prev + 1) % flashcards.length);\n  };\n  const prev = () => {\n    setShowAnswer(false);\n    setIndex(prev => (prev - 1 + flashcards.length) % flashcards.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center gap-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-xl text-center shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: flashcards[index].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base text-gray-700\",\n          children: flashcards[index].answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        onClick: prev,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowAnswer(!showAnswer),\n        children: showAnswer ? \"Ocultar Resposta\" : \"Mostrar Resposta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        onClick: next,\n        children: \"Pr\\xF3ximo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500 mt-2\",\n      children: [\"Flashcard \", index + 1, \" de \", flashcards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardsApp, \"gcSLmCS9e6JIlOb2Aeoo4svwyRc=\");\n_c = FlashcardsApp;\nvar _c;\n$RefreshReg$(_c, \"FlashcardsApp\");","map":{"version":3,"names":["useState","Card","CardContent","Button","jsxDEV","_jsxDEV","flashcards","question","answer","FlashcardsApp","_s","index","setIndex","showAnswer","setShowAnswer","next","prev","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jonat/OneDrive/Documentos/Projetos Pessoais/Flashcards/flashcards/src/FlashcardsApp.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Card, CardContent } from \"./components/ui/card\";\r\nimport { Button } from \"./components/ui/button\";\r\n\r\nconst flashcards = [\r\n  { question: \"O que são dados?\", answer: \"Representações brutas de fatos, como números, nomes ou imagens, que sozinhos não têm significado.\" },\r\n  { question: \"O que é informação?\", answer: \"Resultado da análise ou processamento dos dados, fornecendo contexto e significado.\" },\r\n  { question: \"O que é um banco de dados?\", answer: \"Coleção organizada de dados persistentes, usados para armazenar e recuperar informações.\" },\r\n  { question: \"O que é um SGBD?\", answer: \"Sistema de Gerenciamento de Banco de Dados, software que manipula e controla o acesso aos dados.\" },\r\n  { question: \"Quais os níveis de abstração de um BD?\", answer: \"Conceitual (significado dos dados), Lógico (estrutura relacional) e Físico (armazenamento).\" },\r\n  { question: \"O que é uma transação?\", answer: \"Conjunto de operações que realizam uma função lógica completa no banco de dados.\" },\r\n  { question: \"O que significa ACID?\", answer: \"Conjunto de propriedades das transações: Atomicidade, Consistência, Isolamento e Durabilidade.\" },\r\n  { question: \"Defina Atomicidade\", answer: \"Transações são indivisíveis: ou ocorrem completamente ou não ocorrem.\" },\r\n  { question: \"Defina Consistência\", answer: \"Transações mantêm o banco de dados em um estado válido.\" },\r\n  { question: \"Defina Isolamento\", answer: \"Transações simultâneas não interferem entre si.\" },\r\n  { question: \"Defina Durabilidade\", answer: \"Transações concluídas permanecem no banco mesmo após falhas.\" },\r\n  { question: \"O que é uma entidade?\", answer: \"Objeto do mundo real representado no banco, como Pessoa ou Produto.\" },\r\n  { question: \"O que é uma entidade forte?\", answer: \"Entidade que existe independentemente de outras.\" },\r\n  { question: \"O que é uma entidade fraca?\", answer: \"Entidade que depende de outra para existir.\" },\r\n  { question: \"O que é um relacionamento?\", answer: \"Associação entre duas ou mais entidades.\" },\r\n  { question: \"O que é um relacionamento identificador?\", answer: \"Relacionamento entre entidade forte e entidade fraca.\" },\r\n  { question: \"O que é cardinalidade?\", answer: \"Define o número de ocorrências entre entidades (1:1, 1:N, N:N).\" },\r\n  { question: \"O que é um atributo?\", answer: \"Característica de uma entidade ou relacionamento.\" },\r\n  { question: \"O que é um atributo identificador?\", answer: \"Atributo que diferencia cada ocorrência (ex: id, RA).\" },\r\n  { question: \"O que é um atributo composto?\", answer: \"Atributo formado por subatributos (ex: endereço → rua, cidade).\" },\r\n  { question: \"O que é um atributo multivalorado?\", answer: \"Atributo que pode ter vários valores (ex: telefone).\" },\r\n  { question: \"O que é generalização e especialização?\", answer: \"Relação entre entidade genérica e suas versões específicas (Pessoa → Aluno, Professor).\" },\r\n];\r\n\r\nexport default function FlashcardsApp() {\r\n  const [index, setIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAnswer(false);\r\n    setIndex((prev) => (prev + 1) % flashcards.length);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAnswer(false);\r\n    setIndex((prev) => (prev - 1 + flashcards.length) % flashcards.length);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center gap-4 p-4\">\r\n      <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n        <CardContent className=\"p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">{flashcards[index].question}</h2>\r\n          {showAnswer && <p className=\"text-base text-gray-700\">{flashcards[index].answer}</p>}\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"flex gap-4\">\r\n        <Button variant=\"outline\" onClick={prev}>Anterior</Button>\r\n        <Button onClick={() => setShowAnswer(!showAnswer)}>\r\n          {showAnswer ? \"Ocultar Resposta\" : \"Mostrar Resposta\"}\r\n        </Button>\r\n        <Button variant=\"outline\" onClick={next}>Próximo</Button>\r\n      </div>\r\n      <p className=\"text-sm text-gray-500 mt-2\">\r\n        Flashcard {index + 1} de {flashcards.length}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}