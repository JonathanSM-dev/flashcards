{"ast":null,"code":"import{useState,useEffect,useCallback}from\"react\";import{Card,CardContent}from\"./components/ui/card\";import{Button}from\"./components/ui/button\";import ThemeToggle from\"./components/ui/ThemeToggle\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const flashcards=[{question:\"O que são dados?\",answer:\"Dados são representações brutas de fatos, como números, nomes, imagens ou medições, que sozinhos não transmitem significado. Eles são a matéria-prima para a geração de informações.\"},{question:\"O que é informação?\",answer:\"Informação é o resultado da análise, processamento ou combinação de dados, fornecendo significado, contexto e utilidade para tomada de decisões.\"},{question:\"O que é um banco de dados?\",answer:\"Um banco de dados é uma coleção organizada de dados persistentes, estruturados para permitir armazenamento, consulta, manipulação e recuperação eficientes de informações.\"},{question:\"O que é um SGBD?\",answer:\"Sistema de Gerenciamento de Banco de Dados (SGBD) é o software responsável por criar, gerenciar, armazenar, consultar e proteger os dados em um banco de dados de maneira eficiente e segura.\"},{question:\"Quais os níveis de abstração de um BD?\",answer:\"Os níveis de abstração são: Conceitual (foca no significado dos dados), Lógico (organiza dados e seus relacionamentos) e Físico (detalha como os dados são armazenados no sistema).\"},{question:\"O que é uma transação?\",answer:\"Transação é uma sequência de operações em um banco de dados que juntas formam uma tarefa lógica completa, como uma transferência bancária, respeitando propriedades de integridade.\"},{question:\"O que significa ACID?\",answer:\"ACID é um conjunto de propriedades fundamentais das transações: Atomicidade, Consistência, Isolamento e Durabilidade, que garantem a confiabilidade e integridade dos dados.\"},{question:\"Defina Atomicidade\",answer:\"Atomicidade garante que todas as operações de uma transação sejam realizadas completamente ou, em caso de falha, nenhuma operação tenha efeito.\"},{question:\"Defina Consistência\",answer:\"Consistência assegura que o banco de dados passe de um estado válido para outro também válido após a conclusão de uma transação.\"},{question:\"Defina Isolamento\",answer:\"Isolamento garante que a execução simultânea de múltiplas transações ocorra de forma independente, sem que uma interfira no resultado da outra.\"},{question:\"Defina Durabilidade\",answer:\"Durabilidade assegura que uma vez confirmada, a transação terá seus efeitos permanentemente gravados no banco, mesmo diante de falhas ou quedas de energia.\"},{question:\"O que é uma entidade?\",answer:\"Uma entidade é qualquer objeto ou conceito do mundo real que pode ser representado e armazenado no banco de dados, como uma Pessoa, Produto ou Evento.\"},{question:\"O que é uma entidade forte?\",answer:\"Entidade forte é aquela que existe independentemente de outras entidades e possui seu próprio atributo identificador único.\"},{question:\"O que é uma entidade fraca?\",answer:\"Entidade fraca é aquela que depende de uma entidade forte para existir e para ser identificada, geralmente possuindo uma chave parcial.\"},{question:\"O que é um relacionamento?\",answer:\"Relacionamento é a associação lógica entre duas ou mais entidades, representando como elas se interagem no contexto do banco de dados.\"},{question:\"O que é um relacionamento identificador?\",answer:\"Relacionamento identificador ocorre quando uma entidade fraca depende de uma entidade forte para sua identificação, reforçando seu vínculo de existência.\"},{question:\"O que é cardinalidade?\",answer:\"Cardinalidade define o número mínimo e máximo de associações entre entidades, podendo ser 1:1, 1:N ou N:N em um relacionamento.\"},{question:\"O que é um atributo?\",answer:\"Atributo é uma característica ou propriedade que descreve uma entidade ou um relacionamento, como 'nome', 'data de nascimento' ou 'preço'.\"},{question:\"O que é um atributo identificador?\",answer:\"Atributo identificador é aquele que distingue de forma única cada ocorrência de uma entidade, como um CPF, RA ou número de matrícula.\"},{question:\"O que é um atributo composto?\",answer:\"Atributo composto é aquele formado por vários subatributos que juntos detalham melhor uma informação, como um endereço dividido em rua, cidade e CEP.\"},{question:\"O que é um atributo multivalorado?\",answer:\"Atributo multivalorado é aquele que pode ter vários valores para uma mesma entidade, como vários telefones para uma única pessoa.\"},{question:\"O que é generalização e especialização?\",answer:\"Generalização agrupa entidades específicas em uma entidade genérica, enquanto especialização cria novas entidades mais específicas a partir de uma entidade genérica.\"},{question:\"O que são dados persistentes?\",answer:\"Dados persistentes são aqueles que continuam existindo e armazenados após o fim da aplicação ou sessão, até que sejam explicitamente removidos.\"},{question:\"O que é um esquema de banco de dados?\",answer:\"Esquema é a estrutura formal que define a organização dos dados, como tabelas, campos e relacionamentos, sendo o projeto lógico do banco de dados.\"},{question:\"O que é uma instância de banco de dados?\",answer:\"Instância é o conjunto atual de dados armazenados em um banco de dados em um determinado momento, podendo mudar conforme operações de inserção, atualização ou remoção.\"},{question:\"O que é um modelo de dados?\",answer:\"Modelo de dados é um conjunto de ferramentas conceituais utilizadas para descrever a estrutura dos dados, suas relações e restrições de integridade.\"},{question:\"Qual a diferença entre modelo conceitual, lógico e físico?\",answer:\"O modelo conceitual representa a visão de alto nível (significado dos dados), o modelo lógico organiza os dados para sistemas de SGBD, e o modelo físico descreve como os dados são armazenados fisicamente.\"},{question:\"O que é um relacionamento ternário?\",answer:\"Relacionamento ternário é uma associação que envolve simultaneamente três diferentes entidades, como a relação entre um aluno, uma disciplina e um professor.\"},{question:\"O que é um auto-relacionamento?\",answer:\"Auto-relacionamento é quando uma entidade se relaciona consigo mesma, como funcionários que chefiam outros funcionários na mesma tabela.\"},{question:\"Qual é a função do controle de concorrência em SGBDs?\",answer:\"O controle de concorrência assegura que múltiplas transações simultâneas no banco de dados sejam executadas corretamente, preservando a consistência e evitando conflitos.\"},{question:\"Qual a origem da palavra 'banco' no termo Banco de Dados?\",answer:\"A palavra 'banco' vem do germânico 'Banka' (mesa), usada na Itália para transações financeiras, e foi adaptada para significar o local de armazenamento de dados.\"},{question:\"O que são atributos simples?\",answer:\"Atributos simples são aqueles que armazenam apenas um valor atômico, indivisível, como CPF ou nome de uma pessoa.\"}];export default function FlashcardsApp(){const[index,setIndex]=useState(0);const[showAnswer,setShowAnswer]=useState(false);const[isQuizMode,setIsQuizMode]=useState(false);const[quizResults,setQuizResults]=useState({correct:0,incorrect:0});const[quizCompleted,setQuizCompleted]=useState(false);const[options,setOptions]=useState([]);const[selectedOption,setSelectedOption]=useState(null);const[isCorrect,setIsCorrect]=useState(null);const[randomizedIndices,setRandomizedIndices]=useState([]);const[quizIndex,setQuizIndex]=useState(0);// Estatísticas de Estudo\nconst[statistics,setStatistics]=useState({totalStudied:0,correctAnswers:0,incorrectAnswers:0,studyTime:0,lastStudyDate:null,streak:0});// Para timer de estudo\nconst[studyTime,setStudyTime]=useState(0);const[studyStartTime,setStudyStartTime]=useState(null);const[showStats,setShowStats]=useState(false);// Formatar tempo (segundos -> MM:SS)\nconst formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return`${minutes.toString().padStart(2,'0')}:${remainingSeconds.toString().padStart(2,'0')}`;};// Função para embaralhar um array\nconst shuffleArray=array=>{const shuffled=[...array];for(let i=shuffled.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[shuffled[i],shuffled[j]]=[shuffled[j],shuffled[i]];}return shuffled;};// Envolver funções com useCallback\nconst generateOptions=useCallback(cardIndex=>{const correctAnswer=flashcards[cardIndex].answer;// Coletar todas as respostas incorretas possíveis\nconst incorrectAnswers=flashcards.filter((_,i)=>i!==cardIndex).map(card=>card.answer);// Selecionar 3 respostas incorretas aleatoriamente\nconst randomIncorrectAnswers=shuffleArray(incorrectAnswers).slice(0,3);// Combinar resposta correta com as incorretas e embaralhar\nconst allOptions=shuffleArray([correctAnswer,...randomIncorrectAnswers]);setOptions(allOptions);setSelectedOption(null);setIsCorrect(null);},[]);// Como flashcards é constante, não precisa ser dependência\n// Iniciar o modo de quiz\nconst startQuizMode=useCallback(()=>{setIsQuizMode(true);setQuizResults({correct:0,incorrect:0});setQuizCompleted(false);// Criar array de índices e embaralhá-lo\nconst indices=Array.from({length:flashcards.length},(_,i)=>i);const shuffledIndices=shuffleArray([...indices]);setRandomizedIndices(shuffledIndices);setQuizIndex(0);// Usar o primeiro índice aleatório para a primeira questão\ngenerateOptions(shuffledIndices[0]);// Limpar qualquer informação de conclusão anterior\nlocalStorage.setItem('quiz-completed','false');},[generateOptions]);// Adicione generateOptions como dependência\n// Lidar com a resposta selecionada\nconst handleAnswer=useCallback(selectedOption=>{setSelectedOption(selectedOption);const currentCardIndex=randomizedIndices[quizIndex];const correctAnswer=flashcards[currentCardIndex].answer;const isAnswerCorrect=selectedOption===correctAnswer;setIsCorrect(isAnswerCorrect);// Atualizar resultados do quiz\nif(isAnswerCorrect){setQuizResults(prev=>({...prev,correct:prev.correct+1}));}else{setQuizResults(prev=>({...prev,incorrect:prev.incorrect+1}));}// Aguardar um tempo para mostrar se a resposta está correta ou não\nsetTimeout(()=>{// Avançar para a próxima questão ou finalizar o quiz\nif(quizIndex+1<randomizedIndices.length){setQuizIndex(prev=>prev+1);const nextIndex=quizIndex+1;generateOptions(randomizedIndices[nextIndex]);}else{setQuizCompleted(true);}setSelectedOption(null);setIsCorrect(null);},1000);},[quizIndex,randomizedIndices,generateOptions]);// Adicione as dependências\n// Sair do modo de quiz\nconst exitQuizMode=useCallback(()=>{setIsQuizMode(false);setQuizCompleted(false);setQuizIndex(0);setRandomizedIndices([]);setSelectedOption(null);setIsCorrect(null);},[]);// ----- MELHORIAS DE INTERFACE -----\n// Timer para modo de estudo\nuseEffect(()=>{let timer;if(!isQuizMode&&!quizCompleted){// Iniciar timer quando não estiver em modo prova\ntimer=setInterval(()=>{setStudyTime(prev=>prev+1);},1000);}return()=>clearInterval(timer);},[isQuizMode,quizCompleted]);// ----- SUPORTE A ATALHOS DE TECLADO -----\nuseEffect(()=>{const handleKeyDown=e=>{if(!isQuizMode){// Atalhos para modo normal\nif(e.key===' '||e.code==='Space'){e.preventDefault();// Prevenir scroll\nsetShowAnswer(!showAnswer);}else if(e.key==='ArrowLeft'&&index>0){setIndex(prev=>prev-1);setShowAnswer(false);}else if(e.key==='ArrowRight'&&index<flashcards.length-1){setIndex(prev=>prev+1);setShowAnswer(false);}else if(e.key==='q'||e.key==='Q'){startQuizMode();}}else if(isQuizMode&&!quizCompleted&&selectedOption===null){// Atalhos para modo quiz\nconst optionKeys=['1','2','3','4'];const optionIndex=optionKeys.indexOf(e.key);if(optionIndex>=0&&optionIndex<options.length){handleAnswer(options[optionIndex]);}else if(e.key==='Escape'){exitQuizMode();}}else if(quizCompleted){// Atalhos para tela de resultados\nif(e.key==='Escape'||e.key==='Enter'||e.key===' '){exitQuizMode();}}};window.addEventListener('keydown',handleKeyDown);return()=>window.removeEventListener('keydown',handleKeyDown);},[showAnswer,index,isQuizMode,quizCompleted,options,selectedOption,handleAnswer,startQuizMode,exitQuizMode]);// ----- ESTATÍSTICAS DE ESTUDO -----\n// Carregar estatísticas do localStorage\nuseEffect(()=>{const savedStats=localStorage.getItem('study-statistics');if(savedStats){setStatistics(JSON.parse(savedStats));}// Iniciar timer de estudo\nsetStudyStartTime(new Date());},[]);// Salvar estatísticas no localStorage\nuseEffect(()=>{localStorage.setItem('study-statistics',JSON.stringify(statistics));},[statistics]);// Atualizar streak diário e estatísticas ao sair\nuseEffect(()=>{const updateStatisticsOnExit=()=>{const now=new Date();const today=new Date(now.getFullYear(),now.getMonth(),now.getDate());const lastDate=statistics.lastStudyDate?new Date(statistics.lastStudyDate):null;// Calcular tempo de estudo desta sessão\nconst sessionTime=Math.floor((now-studyStartTime)/1000);// Verificar streak (dias consecutivos)\nlet newStreak=statistics.streak;if(lastDate){const yesterday=new Date(today);yesterday.setDate(yesterday.getDate()-1);if(lastDate.getTime()===yesterday.getTime()){newStreak++;// Estudou ontem, aumenta streak\n}else if(lastDate.getTime()!==today.getTime()){newStreak=1;// Não estudou ontem nem hoje ainda, reinicia streak\n}}else{newStreak=1;// Primeira vez estudando\n}setStatistics(prev=>({...prev,studyTime:prev.studyTime+sessionTime,lastStudyDate:today.toISOString(),streak:newStreak}));};// Atualizar estatísticas quando o componente for desmontado\nwindow.addEventListener('beforeunload',updateStatisticsOnExit);return()=>{window.removeEventListener('beforeunload',updateStatisticsOnExit);updateStatisticsOnExit();// Também atualizar ao desmontar o componente\n};},[statistics.lastStudyDate,statistics.streak,studyStartTime]);// Atualizar estatísticas quando completar um quiz\nuseEffect(()=>{if(quizCompleted){setStatistics(prev=>({...prev,totalStudied:prev.totalStudied+quizResults.correct+quizResults.incorrect,correctAnswers:prev.correctAnswers+quizResults.correct,incorrectAnswers:prev.incorrectAnswers+quizResults.incorrect}));}},[quizCompleted,quizResults]);// ----- PERSISTÊNCIA DE DADOS -----\n// Carregar dados do localStorage ao iniciar o aplicativo\nuseEffect(()=>{// Carregar último índice visualizado\nconst savedIndex=localStorage.getItem('flashcard-index');if(savedIndex)setIndex(parseInt(savedIndex));// Carregar resultados de quiz anteriores\nconst savedResults=localStorage.getItem('quiz-results');if(savedResults)setQuizResults(JSON.parse(savedResults));// Carregar preferência de mostrar resposta\nconst savedShowAnswer=localStorage.getItem('show-answer');if(savedShowAnswer)setShowAnswer(savedShowAnswer==='true');// Carregar progresso do quiz se houver um em andamento\nconst inQuizMode=localStorage.getItem('quiz-mode')==='true';if(inQuizMode){const savedRandomIndices=localStorage.getItem('random-indices');const savedQuizIndex=localStorage.getItem('quiz-index');const quizCompleted=localStorage.getItem('quiz-completed')==='true';if(savedRandomIndices&&savedQuizIndex&&!quizCompleted){setIsQuizMode(true);setRandomizedIndices(JSON.parse(savedRandomIndices));setQuizIndex(parseInt(savedQuizIndex));generateOptions(JSON.parse(savedRandomIndices)[parseInt(savedQuizIndex)]);}}},[generateOptions]);// Salvar índice atual quando mudar\nuseEffect(()=>{localStorage.setItem('flashcard-index',index);},[index]);// Salvar preferência de mostrar resposta\nuseEffect(()=>{localStorage.setItem('show-answer',showAnswer);},[showAnswer]);// Salvar resultados do quiz\nuseEffect(()=>{localStorage.setItem('quiz-results',JSON.stringify(quizResults));},[quizResults]);// Salvar estado do modo quiz\nuseEffect(()=>{localStorage.setItem('quiz-mode',isQuizMode);// Se sair do modo quiz, limpa dados relacionados\nif(!isQuizMode){localStorage.removeItem('random-indices');localStorage.removeItem('quiz-index');localStorage.removeItem('quiz-completed');}},[isQuizMode]);// Salvar índices aleatórios e índice atual do quiz\nuseEffect(()=>{if(isQuizMode&&randomizedIndices.length>0){localStorage.setItem('random-indices',JSON.stringify(randomizedIndices));}},[isQuizMode,randomizedIndices]);useEffect(()=>{if(isQuizMode){localStorage.setItem('quiz-index',quizIndex);}},[isQuizMode,quizIndex]);// Salvar estado de conclusão do quiz\nuseEffect(()=>{localStorage.setItem('quiz-completed',quizCompleted);},[quizCompleted]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-4 right-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>setShowStats(!showStats),className:\"text-xs\",children:\"Estat\\xEDsticas\"}),/*#__PURE__*/_jsx(ThemeToggle,{})]}),!isQuizMode&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-600 h-2 rounded-full transition-all duration-300\",style:{width:`${(index+1)/flashcards.length*100}%`}})}),isQuizMode&&!quizCompleted&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-600 h-2 rounded-full transition-all duration-300\",style:{width:`${(quizIndex+1)/randomizedIndices.length*100}%`}})}),!isQuizMode&&!showStats&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl text-center shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:flashcards[index].question}),showAnswer&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-lg\",children:flashcards[index].answer})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 justify-center\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:()=>setShowAnswer(!showAnswer),children:[showAnswer?\"Esconder Resposta\":\"Mostrar Resposta\",\" (ESPA\\xC7O)\"]}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>{setIndex(Math.max(0,index-1));setShowAnswer(false);},disabled:index===0,children:\"Anterior (\\u2190)\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>{setIndex(Math.min(flashcards.length-1,index+1));setShowAnswer(false);},disabled:index===flashcards.length-1,children:\"Pr\\xF3ximo (\\u2192)\"}),/*#__PURE__*/_jsx(Button,{variant:\"default\",onClick:startQuizMode,children:\"Modo Prova (Q)\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[\"Card \",index+1,\" de \",flashcards.length,\" | Tempo de estudo: \",formatTime(studyTime)]})]}),showStats&&!isQuizMode&&/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4 text-center\",children:\"Estat\\xEDsticas de Estudo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"Dias consecutivos\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:statistics.streak})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"Total estudado\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:statistics.totalStudied})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"Acertos\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-green-600\",children:statistics.correctAnswers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"Erros\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-red-600\",children:statistics.incorrectAnswers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"Tempo de estudo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:formatTime(statistics.studyTime)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-sm text-gray-500 dark:text-gray-400\",children:\"\\xDAltimo estudo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-bold\",children:statistics.lastStudyDate?new Date(statistics.lastStudyDate).toLocaleDateString():'Hoje'})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"default\",className:\"w-full mt-4\",onClick:()=>setShowStats(false),children:\"Voltar ao Estudo\"})]})}),isQuizMode&&!quizCompleted&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl text-center shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:flashcards[randomizedIndices[quizIndex]].question}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-2\",children:options.map((option,i)=>/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:()=>handleAnswer(option),className:`text-left px-4 py-3 md:text-center ${selectedOption===option?isCorrect?\"bg-green-500 text-white\":\"bg-red-500 text-white\":\"\"}`,disabled:selectedOption!==null,children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 inline-block px-1.5 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\",children:i+1}),\" \",option]},i))})]})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[\"Quest\\xE3o \",quizIndex+1,\" de \",randomizedIndices.length,\" | ESC para sair\"]})]}),quizCompleted&&/*#__PURE__*/_jsx(Card,{className:\"w-full max-w-xl text-center shadow-xl\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6\",children:\"Resultados do Quiz\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-100 dark:bg-green-900 p-4 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-green-800 dark:text-green-100\",children:\"Acertos\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-green-600 dark:text-green-200\",children:quizResults.correct})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 dark:bg-red-900 p-4 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-red-800 dark:text-red-100\",children:\"Erros\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-red-600 dark:text-red-200\",children:quizResults.incorrect})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium mb-2\",children:\"Aproveitamento\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-600 h-4 rounded-full transition-all duration-500\",style:{width:`${quizResults.correct/(quizResults.correct+quizResults.incorrect)*100}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-2 text-lg font-bold\",children:[Math.round(quizResults.correct/(quizResults.correct+quizResults.incorrect)*100),\"%\"]})]}),/*#__PURE__*/_jsx(Button,{variant:\"default\",onClick:exitQuizMode,children:\"Sair do Modo Prova (ESC ou ENTER)\"})]})})]});}","map":{"version":3,"names":["useState","useEffect","useCallback","Card","CardContent","Button","ThemeToggle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","flashcards","question","answer","FlashcardsApp","index","setIndex","showAnswer","setShowAnswer","isQuizMode","setIsQuizMode","quizResults","setQuizResults","correct","incorrect","quizCompleted","setQuizCompleted","options","setOptions","selectedOption","setSelectedOption","isCorrect","setIsCorrect","randomizedIndices","setRandomizedIndices","quizIndex","setQuizIndex","statistics","setStatistics","totalStudied","correctAnswers","incorrectAnswers","studyTime","lastStudyDate","streak","setStudyTime","studyStartTime","setStudyStartTime","showStats","setShowStats","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","shuffleArray","array","shuffled","i","length","j","random","generateOptions","cardIndex","correctAnswer","filter","_","map","card","randomIncorrectAnswers","slice","allOptions","startQuizMode","indices","Array","from","shuffledIndices","localStorage","setItem","handleAnswer","currentCardIndex","isAnswerCorrect","prev","setTimeout","nextIndex","exitQuizMode","timer","setInterval","clearInterval","handleKeyDown","e","key","code","preventDefault","optionKeys","optionIndex","indexOf","window","addEventListener","removeEventListener","savedStats","getItem","JSON","parse","Date","stringify","updateStatisticsOnExit","now","today","getFullYear","getMonth","getDate","lastDate","sessionTime","newStreak","yesterday","setDate","getTime","toISOString","savedIndex","parseInt","savedResults","savedShowAnswer","inQuizMode","savedRandomIndices","savedQuizIndex","removeItem","className","children","variant","size","onClick","style","width","max","disabled","min","toLocaleDateString","option","round"],"sources":["C:/Users/jonat/OneDrive/Documentos/Projetos Pessoais/Flashcards/flashcards/src/FlashcardsApp.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { Card, CardContent } from \"./components/ui/card\";\r\nimport { Button } from \"./components/ui/button\";\r\nimport ThemeToggle from \"./components/ui/ThemeToggle\";\r\n\r\nconst flashcards = [\r\n  {\r\n    question: \"O que são dados?\",\r\n    answer: \"Dados são representações brutas de fatos, como números, nomes, imagens ou medições, que sozinhos não transmitem significado. Eles são a matéria-prima para a geração de informações.\",\r\n  },\r\n  {\r\n    question: \"O que é informação?\",\r\n    answer: \"Informação é o resultado da análise, processamento ou combinação de dados, fornecendo significado, contexto e utilidade para tomada de decisões.\",\r\n  },\r\n  {\r\n    question: \"O que é um banco de dados?\",\r\n    answer: \"Um banco de dados é uma coleção organizada de dados persistentes, estruturados para permitir armazenamento, consulta, manipulação e recuperação eficientes de informações.\",\r\n  },\r\n  {\r\n    question: \"O que é um SGBD?\",\r\n    answer: \"Sistema de Gerenciamento de Banco de Dados (SGBD) é o software responsável por criar, gerenciar, armazenar, consultar e proteger os dados em um banco de dados de maneira eficiente e segura.\",\r\n  },\r\n  {\r\n    question: \"Quais os níveis de abstração de um BD?\",\r\n    answer: \"Os níveis de abstração são: Conceitual (foca no significado dos dados), Lógico (organiza dados e seus relacionamentos) e Físico (detalha como os dados são armazenados no sistema).\",\r\n  },\r\n  {\r\n    question: \"O que é uma transação?\",\r\n    answer: \"Transação é uma sequência de operações em um banco de dados que juntas formam uma tarefa lógica completa, como uma transferência bancária, respeitando propriedades de integridade.\",\r\n  },\r\n  {\r\n    question: \"O que significa ACID?\",\r\n    answer: \"ACID é um conjunto de propriedades fundamentais das transações: Atomicidade, Consistência, Isolamento e Durabilidade, que garantem a confiabilidade e integridade dos dados.\",\r\n  },\r\n  {\r\n    question: \"Defina Atomicidade\",\r\n    answer: \"Atomicidade garante que todas as operações de uma transação sejam realizadas completamente ou, em caso de falha, nenhuma operação tenha efeito.\",\r\n  },\r\n  {\r\n    question: \"Defina Consistência\",\r\n    answer: \"Consistência assegura que o banco de dados passe de um estado válido para outro também válido após a conclusão de uma transação.\",\r\n  },\r\n  {\r\n    question: \"Defina Isolamento\",\r\n    answer: \"Isolamento garante que a execução simultânea de múltiplas transações ocorra de forma independente, sem que uma interfira no resultado da outra.\",\r\n  },\r\n  {\r\n    question: \"Defina Durabilidade\",\r\n    answer: \"Durabilidade assegura que uma vez confirmada, a transação terá seus efeitos permanentemente gravados no banco, mesmo diante de falhas ou quedas de energia.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade?\",\r\n    answer: \"Uma entidade é qualquer objeto ou conceito do mundo real que pode ser representado e armazenado no banco de dados, como uma Pessoa, Produto ou Evento.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade forte?\",\r\n    answer: \"Entidade forte é aquela que existe independentemente de outras entidades e possui seu próprio atributo identificador único.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade fraca?\",\r\n    answer: \"Entidade fraca é aquela que depende de uma entidade forte para existir e para ser identificada, geralmente possuindo uma chave parcial.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento?\",\r\n    answer: \"Relacionamento é a associação lógica entre duas ou mais entidades, representando como elas se interagem no contexto do banco de dados.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento identificador?\",\r\n    answer: \"Relacionamento identificador ocorre quando uma entidade fraca depende de uma entidade forte para sua identificação, reforçando seu vínculo de existência.\",\r\n  },\r\n  {\r\n    question: \"O que é cardinalidade?\",\r\n    answer: \"Cardinalidade define o número mínimo e máximo de associações entre entidades, podendo ser 1:1, 1:N ou N:N em um relacionamento.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo?\",\r\n    answer: \"Atributo é uma característica ou propriedade que descreve uma entidade ou um relacionamento, como 'nome', 'data de nascimento' ou 'preço'.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo identificador?\",\r\n    answer: \"Atributo identificador é aquele que distingue de forma única cada ocorrência de uma entidade, como um CPF, RA ou número de matrícula.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo composto?\",\r\n    answer: \"Atributo composto é aquele formado por vários subatributos que juntos detalham melhor uma informação, como um endereço dividido em rua, cidade e CEP.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo multivalorado?\",\r\n    answer: \"Atributo multivalorado é aquele que pode ter vários valores para uma mesma entidade, como vários telefones para uma única pessoa.\",\r\n  },\r\n  {\r\n    question: \"O que é generalização e especialização?\",\r\n    answer: \"Generalização agrupa entidades específicas em uma entidade genérica, enquanto especialização cria novas entidades mais específicas a partir de uma entidade genérica.\",\r\n  },\r\n  {\r\n    question: \"O que são dados persistentes?\",\r\n    answer: \"Dados persistentes são aqueles que continuam existindo e armazenados após o fim da aplicação ou sessão, até que sejam explicitamente removidos.\",\r\n  },\r\n  {\r\n    question: \"O que é um esquema de banco de dados?\",\r\n    answer: \"Esquema é a estrutura formal que define a organização dos dados, como tabelas, campos e relacionamentos, sendo o projeto lógico do banco de dados.\",\r\n  },\r\n  {\r\n    question: \"O que é uma instância de banco de dados?\",\r\n    answer: \"Instância é o conjunto atual de dados armazenados em um banco de dados em um determinado momento, podendo mudar conforme operações de inserção, atualização ou remoção.\",\r\n  },\r\n  {\r\n    question: \"O que é um modelo de dados?\",\r\n    answer: \"Modelo de dados é um conjunto de ferramentas conceituais utilizadas para descrever a estrutura dos dados, suas relações e restrições de integridade.\",\r\n  },\r\n  {\r\n    question: \"Qual a diferença entre modelo conceitual, lógico e físico?\",\r\n    answer: \"O modelo conceitual representa a visão de alto nível (significado dos dados), o modelo lógico organiza os dados para sistemas de SGBD, e o modelo físico descreve como os dados são armazenados fisicamente.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento ternário?\",\r\n    answer: \"Relacionamento ternário é uma associação que envolve simultaneamente três diferentes entidades, como a relação entre um aluno, uma disciplina e um professor.\",\r\n  },\r\n  {\r\n    question: \"O que é um auto-relacionamento?\",\r\n    answer: \"Auto-relacionamento é quando uma entidade se relaciona consigo mesma, como funcionários que chefiam outros funcionários na mesma tabela.\",\r\n  },\r\n  {\r\n    question: \"Qual é a função do controle de concorrência em SGBDs?\",\r\n    answer: \"O controle de concorrência assegura que múltiplas transações simultâneas no banco de dados sejam executadas corretamente, preservando a consistência e evitando conflitos.\",\r\n  },\r\n  {\r\n    question: \"Qual a origem da palavra 'banco' no termo Banco de Dados?\",\r\n    answer: \"A palavra 'banco' vem do germânico 'Banka' (mesa), usada na Itália para transações financeiras, e foi adaptada para significar o local de armazenamento de dados.\",\r\n  },\r\n  {\r\n    question: \"O que são atributos simples?\",\r\n    answer: \"Atributos simples são aqueles que armazenam apenas um valor atômico, indivisível, como CPF ou nome de uma pessoa.\",\r\n  },\r\n];\r\n\r\nexport default function FlashcardsApp() {\r\n  const [index, setIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isQuizMode, setIsQuizMode] = useState(false);\r\n  const [quizResults, setQuizResults] = useState({ correct: 0, incorrect: 0 });\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [randomizedIndices, setRandomizedIndices] = useState([]);\r\n  const [quizIndex, setQuizIndex] = useState(0);\r\n  \r\n  // Estatísticas de Estudo\r\n  const [statistics, setStatistics] = useState({\r\n    totalStudied: 0,\r\n    correctAnswers: 0,\r\n    incorrectAnswers: 0,\r\n    studyTime: 0,\r\n    lastStudyDate: null,\r\n    streak: 0\r\n  });\r\n  \r\n  // Para timer de estudo\r\n  const [studyTime, setStudyTime] = useState(0);\r\n  const [studyStartTime, setStudyStartTime] = useState(null);\r\n  const [showStats, setShowStats] = useState(false);\r\n  \r\n  // Formatar tempo (segundos -> MM:SS)\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Função para embaralhar um array\r\n  const shuffleArray = (array) => {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n\r\n  // Envolver funções com useCallback\r\n  const generateOptions = useCallback((cardIndex) => {\r\n    const correctAnswer = flashcards[cardIndex].answer;\r\n    \r\n    // Coletar todas as respostas incorretas possíveis\r\n    const incorrectAnswers = flashcards\r\n      .filter((_, i) => i !== cardIndex)\r\n      .map((card) => card.answer);\r\n    \r\n    // Selecionar 3 respostas incorretas aleatoriamente\r\n    const randomIncorrectAnswers = shuffleArray(incorrectAnswers).slice(0, 3);\r\n    \r\n    // Combinar resposta correta com as incorretas e embaralhar\r\n    const allOptions = shuffleArray([correctAnswer, ...randomIncorrectAnswers]);\r\n    \r\n    setOptions(allOptions);\r\n    setSelectedOption(null);\r\n    setIsCorrect(null);\r\n  }, []);  // Como flashcards é constante, não precisa ser dependência\r\n\r\n  // Iniciar o modo de quiz\r\n  const startQuizMode = useCallback(() => {\r\n    setIsQuizMode(true);\r\n    setQuizResults({ correct: 0, incorrect: 0 });\r\n    setQuizCompleted(false);\r\n    \r\n    // Criar array de índices e embaralhá-lo\r\n    const indices = Array.from({ length: flashcards.length }, (_, i) => i);\r\n    const shuffledIndices = shuffleArray([...indices]);\r\n    setRandomizedIndices(shuffledIndices);\r\n    setQuizIndex(0);\r\n    \r\n    // Usar o primeiro índice aleatório para a primeira questão\r\n    generateOptions(shuffledIndices[0]);\r\n    \r\n    // Limpar qualquer informação de conclusão anterior\r\n    localStorage.setItem('quiz-completed', 'false');\r\n  }, [generateOptions]);  // Adicione generateOptions como dependência\r\n\r\n  // Lidar com a resposta selecionada\r\n  const handleAnswer = useCallback((selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n    \r\n    const currentCardIndex = randomizedIndices[quizIndex];\r\n    const correctAnswer = flashcards[currentCardIndex].answer;\r\n    const isAnswerCorrect = selectedOption === correctAnswer;\r\n    \r\n    setIsCorrect(isAnswerCorrect);\r\n    \r\n    // Atualizar resultados do quiz\r\n    if (isAnswerCorrect) {\r\n      setQuizResults(prev => ({ ...prev, correct: prev.correct + 1 }));\r\n    } else {\r\n      setQuizResults(prev => ({ ...prev, incorrect: prev.incorrect + 1 }));\r\n    }\r\n    \r\n    // Aguardar um tempo para mostrar se a resposta está correta ou não\r\n    setTimeout(() => {\r\n      // Avançar para a próxima questão ou finalizar o quiz\r\n      if (quizIndex + 1 < randomizedIndices.length) {\r\n        setQuizIndex(prev => prev + 1);\r\n        const nextIndex = quizIndex + 1;\r\n        generateOptions(randomizedIndices[nextIndex]);\r\n      } else {\r\n        setQuizCompleted(true);\r\n      }\r\n      \r\n      setSelectedOption(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  }, [quizIndex, randomizedIndices, generateOptions]); // Adicione as dependências\r\n\r\n  // Sair do modo de quiz\r\n  const exitQuizMode = useCallback(() => {\r\n    setIsQuizMode(false);\r\n    setQuizCompleted(false);\r\n    setQuizIndex(0);\r\n    setRandomizedIndices([]);\r\n    setSelectedOption(null);\r\n    setIsCorrect(null);\r\n  }, []);\r\n  \r\n  // ----- MELHORIAS DE INTERFACE -----\r\n  \r\n  // Timer para modo de estudo\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!isQuizMode && !quizCompleted) {\r\n      // Iniciar timer quando não estiver em modo prova\r\n      timer = setInterval(() => {\r\n        setStudyTime(prev => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isQuizMode, quizCompleted]);\r\n  \r\n  // ----- SUPORTE A ATALHOS DE TECLADO -----\r\n  \r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (!isQuizMode) {\r\n        // Atalhos para modo normal\r\n        if (e.key === ' ' || e.code === 'Space') {\r\n          e.preventDefault(); // Prevenir scroll\r\n          setShowAnswer(!showAnswer);\r\n        } else if (e.key === 'ArrowLeft' && index > 0) {\r\n          setIndex(prev => prev - 1);\r\n          setShowAnswer(false);\r\n        } else if (e.key === 'ArrowRight' && index < flashcards.length - 1) {\r\n          setIndex(prev => prev + 1);\r\n          setShowAnswer(false);\r\n        } else if (e.key === 'q' || e.key === 'Q') {\r\n          startQuizMode();\r\n        }\r\n      } else if (isQuizMode && !quizCompleted && selectedOption === null) {\r\n        // Atalhos para modo quiz\r\n        const optionKeys = ['1', '2', '3', '4'];\r\n        const optionIndex = optionKeys.indexOf(e.key);\r\n        \r\n        if (optionIndex >= 0 && optionIndex < options.length) {\r\n          handleAnswer(options[optionIndex]);\r\n        } else if (e.key === 'Escape') {\r\n          exitQuizMode();\r\n        }\r\n      } else if (quizCompleted) {\r\n        // Atalhos para tela de resultados\r\n        if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ') {\r\n          exitQuizMode();\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [showAnswer, index, isQuizMode, quizCompleted, options, selectedOption, handleAnswer, startQuizMode, exitQuizMode]);\r\n  \r\n  // ----- ESTATÍSTICAS DE ESTUDO -----\r\n  \r\n  // Carregar estatísticas do localStorage\r\n  useEffect(() => {\r\n    const savedStats = localStorage.getItem('study-statistics');\r\n    if (savedStats) {\r\n      setStatistics(JSON.parse(savedStats));\r\n    }\r\n    \r\n    // Iniciar timer de estudo\r\n    setStudyStartTime(new Date());\r\n  }, []);\r\n  \r\n  // Salvar estatísticas no localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('study-statistics', JSON.stringify(statistics));\r\n  }, [statistics]);\r\n  \r\n  // Atualizar streak diário e estatísticas ao sair\r\n  useEffect(() => {\r\n    const updateStatisticsOnExit = () => {\r\n      const now = new Date();\r\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      const lastDate = statistics.lastStudyDate ? new Date(statistics.lastStudyDate) : null;\r\n      \r\n      // Calcular tempo de estudo desta sessão\r\n      const sessionTime = Math.floor((now - studyStartTime) / 1000);\r\n      \r\n      // Verificar streak (dias consecutivos)\r\n      let newStreak = statistics.streak;\r\n      if (lastDate) {\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        \r\n        if (lastDate.getTime() === yesterday.getTime()) {\r\n          newStreak++; // Estudou ontem, aumenta streak\r\n        } else if (lastDate.getTime() !== today.getTime()) {\r\n          newStreak = 1; // Não estudou ontem nem hoje ainda, reinicia streak\r\n        }\r\n      } else {\r\n        newStreak = 1; // Primeira vez estudando\r\n      }\r\n      \r\n      setStatistics(prev => ({\r\n        ...prev,\r\n        studyTime: prev.studyTime + sessionTime,\r\n        lastStudyDate: today.toISOString(),\r\n        streak: newStreak\r\n      }));\r\n    };\r\n    \r\n    // Atualizar estatísticas quando o componente for desmontado\r\n    window.addEventListener('beforeunload', updateStatisticsOnExit);\r\n    return () => {\r\n      window.removeEventListener('beforeunload', updateStatisticsOnExit);\r\n      updateStatisticsOnExit(); // Também atualizar ao desmontar o componente\r\n    };\r\n  }, [statistics.lastStudyDate, statistics.streak, studyStartTime]);\r\n  \r\n  // Atualizar estatísticas quando completar um quiz\r\n  useEffect(() => {\r\n    if (quizCompleted) {\r\n      setStatistics(prev => ({\r\n        ...prev,\r\n        totalStudied: prev.totalStudied + quizResults.correct + quizResults.incorrect,\r\n        correctAnswers: prev.correctAnswers + quizResults.correct,\r\n        incorrectAnswers: prev.incorrectAnswers + quizResults.incorrect\r\n      }));\r\n    }\r\n  }, [quizCompleted, quizResults]);\r\n  \r\n  // ----- PERSISTÊNCIA DE DADOS -----\r\n  \r\n  // Carregar dados do localStorage ao iniciar o aplicativo\r\n  useEffect(() => {\r\n    // Carregar último índice visualizado\r\n    const savedIndex = localStorage.getItem('flashcard-index');\r\n    if (savedIndex) setIndex(parseInt(savedIndex));\r\n    \r\n    // Carregar resultados de quiz anteriores\r\n    const savedResults = localStorage.getItem('quiz-results');\r\n    if (savedResults) setQuizResults(JSON.parse(savedResults));\r\n    \r\n    // Carregar preferência de mostrar resposta\r\n    const savedShowAnswer = localStorage.getItem('show-answer');\r\n    if (savedShowAnswer) setShowAnswer(savedShowAnswer === 'true');\r\n    \r\n    // Carregar progresso do quiz se houver um em andamento\r\n    const inQuizMode = localStorage.getItem('quiz-mode') === 'true';\r\n    if (inQuizMode) {\r\n      const savedRandomIndices = localStorage.getItem('random-indices');\r\n      const savedQuizIndex = localStorage.getItem('quiz-index');\r\n      const quizCompleted = localStorage.getItem('quiz-completed') === 'true';\r\n      \r\n      if (savedRandomIndices && savedQuizIndex && !quizCompleted) {\r\n        setIsQuizMode(true);\r\n        setRandomizedIndices(JSON.parse(savedRandomIndices));\r\n        setQuizIndex(parseInt(savedQuizIndex));\r\n        generateOptions(JSON.parse(savedRandomIndices)[parseInt(savedQuizIndex)]);\r\n      }\r\n    }\r\n  }, [generateOptions]);\r\n  \r\n  // Salvar índice atual quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('flashcard-index', index);\r\n  }, [index]);\r\n  \r\n  // Salvar preferência de mostrar resposta\r\n  useEffect(() => {\r\n    localStorage.setItem('show-answer', showAnswer);\r\n  }, [showAnswer]);\r\n  \r\n  // Salvar resultados do quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-results', JSON.stringify(quizResults));\r\n  }, [quizResults]);\r\n  \r\n  // Salvar estado do modo quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-mode', isQuizMode);\r\n    // Se sair do modo quiz, limpa dados relacionados\r\n    if (!isQuizMode) {\r\n      localStorage.removeItem('random-indices');\r\n      localStorage.removeItem('quiz-index');\r\n      localStorage.removeItem('quiz-completed');\r\n    }\r\n  }, [isQuizMode]);\r\n  \r\n  // Salvar índices aleatórios e índice atual do quiz\r\n  useEffect(() => {\r\n    if (isQuizMode && randomizedIndices.length > 0) {\r\n      localStorage.setItem('random-indices', JSON.stringify(randomizedIndices));\r\n    }\r\n  }, [isQuizMode, randomizedIndices]);\r\n  \r\n  useEffect(() => {\r\n    if (isQuizMode) {\r\n      localStorage.setItem('quiz-index', quizIndex);\r\n    }\r\n  }, [isQuizMode, quizIndex]);\r\n  \r\n  // Salvar estado de conclusão do quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-completed', quizCompleted);\r\n  }, [quizCompleted]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\">\r\n      <div className=\"absolute top-4 right-4 flex items-center gap-2\">\r\n        <Button \r\n          variant=\"outline\" \r\n          size=\"sm\"\r\n          onClick={() => setShowStats(!showStats)}\r\n          className=\"text-xs\"\r\n        >\r\n          Estatísticas\r\n        </Button>\r\n        <ThemeToggle />\r\n      </div>\r\n\r\n      {/* Barra de progresso */}\r\n      {!isQuizMode && (\r\n        <div className=\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\">\r\n          <div \r\n            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\" \r\n            style={{ width: `${((index + 1) / flashcards.length) * 100}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {isQuizMode && !quizCompleted && (\r\n        <div className=\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\">\r\n          <div \r\n            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\" \r\n            style={{ width: `${((quizIndex + 1) / randomizedIndices.length) * 100}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {!isQuizMode && !showStats && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">\r\n                {flashcards[index].question}\r\n              </h2>\r\n              {showAnswer && (\r\n                <p className=\"mt-4 text-lg\">{flashcards[index].answer}</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <div className=\"flex flex-wrap gap-2 justify-center\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setShowAnswer(!showAnswer)}\r\n            >\r\n              {showAnswer ? \"Esconder Resposta\" : \"Mostrar Resposta\"} (ESPAÇO)\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => {\r\n                setIndex(Math.max(0, index - 1));\r\n                setShowAnswer(false);\r\n              }}\r\n              disabled={index === 0}\r\n            >\r\n              Anterior (←)\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => {\r\n                setIndex(Math.min(flashcards.length - 1, index + 1));\r\n                setShowAnswer(false);\r\n              }}\r\n              disabled={index === flashcards.length - 1}\r\n            >\r\n              Próximo (→)\r\n            </Button>\r\n\r\n            <Button variant=\"default\" onClick={startQuizMode}>\r\n              Modo Prova (Q)\r\n            </Button>\r\n          </div>\r\n          \r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Card {index + 1} de {flashcards.length} | Tempo de estudo: {formatTime(studyTime)}\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      {showStats && !isQuizMode && (\r\n        <Card className=\"w-full max-w-xl shadow-xl\">\r\n          <CardContent className=\"p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Estatísticas de Estudo</h2>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Dias consecutivos</h3>\r\n                <p className=\"text-2xl font-bold\">{statistics.streak}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Total estudado</h3>\r\n                <p className=\"text-2xl font-bold\">{statistics.totalStudied}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Acertos</h3>\r\n                <p className=\"text-2xl font-bold text-green-600\">{statistics.correctAnswers}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Erros</h3>\r\n                <p className=\"text-2xl font-bold text-red-600\">{statistics.incorrectAnswers}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Tempo de estudo</h3>\r\n                <p className=\"text-2xl font-bold\">{formatTime(statistics.studyTime)}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Último estudo</h3>\r\n                <p className=\"text-xl font-bold\">\r\n                  {statistics.lastStudyDate \r\n                    ? new Date(statistics.lastStudyDate).toLocaleDateString() \r\n                    : 'Hoje'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <Button \r\n              variant=\"default\" \r\n              className=\"w-full mt-4\"\r\n              onClick={() => setShowStats(false)}\r\n            >\r\n              Voltar ao Estudo\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {isQuizMode && !quizCompleted && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">\r\n                {flashcards[randomizedIndices[quizIndex]].question}\r\n              </h2>\r\n              <div className=\"flex flex-col gap-2\">\r\n                {options.map((option, i) => (\r\n                  <Button\r\n                    key={i}\r\n                    variant=\"outline\"\r\n                    onClick={() => handleAnswer(option)}\r\n                    className={`text-left px-4 py-3 md:text-center ${\r\n                      selectedOption === option\r\n                        ? isCorrect\r\n                          ? \"bg-green-500 text-white\"\r\n                          : \"bg-red-500 text-white\"\r\n                        : \"\"\r\n                    }`}\r\n                    disabled={selectedOption !== null}\r\n                  >\r\n                    <span className=\"mr-2 inline-block px-1.5 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\">\r\n                      {i + 1}\r\n                    </span>{\" \"}\r\n                    {option}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Questão {quizIndex + 1} de {randomizedIndices.length} | ESC para sair\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      {quizCompleted && (\r\n        <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n          <CardContent className=\"p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Resultados do Quiz</h2>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n              <div className=\"bg-green-100 dark:bg-green-900 p-4 rounded-md\">\r\n                <h3 className=\"font-medium text-green-800 dark:text-green-100\">Acertos</h3>\r\n                <p className=\"text-3xl font-bold text-green-600 dark:text-green-200\">\r\n                  {quizResults.correct}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"bg-red-100 dark:bg-red-900 p-4 rounded-md\">\r\n                <h3 className=\"font-medium text-red-800 dark:text-red-100\">Erros</h3>\r\n                <p className=\"text-3xl font-bold text-red-600 dark:text-red-200\">\r\n                  {quizResults.incorrect}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <h3 className=\"font-medium mb-2\">Aproveitamento</h3>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700\">\r\n                <div \r\n                  className=\"bg-green-600 h-4 rounded-full transition-all duration-500\" \r\n                  style={{ \r\n                    width: `${(quizResults.correct / (quizResults.correct + quizResults.incorrect)) * 100}%` \r\n                  }}\r\n                />\r\n              </div>\r\n              <p className=\"mt-2 text-lg font-bold\">\r\n                {Math.round((quizResults.correct / (quizResults.correct + quizResults.incorrect)) * 100)}%\r\n              </p>\r\n            </div>\r\n            \r\n            <Button variant=\"default\" onClick={exitQuizMode}>\r\n              Sair do Modo Prova (ESC ou ENTER)\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}