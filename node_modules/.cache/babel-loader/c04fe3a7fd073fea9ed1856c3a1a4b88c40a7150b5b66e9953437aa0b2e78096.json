{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Documentos\\\\Projetos Pessoais\\\\Flashcards\\\\flashcards\\\\src\\\\FlashcardsApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card\";\nimport { Button } from \"./components/ui/button\";\nimport ThemeToggle from \"./components/ui/ThemeToggle\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst flashcards = [{\n  question: \"O que são dados?\",\n  answer: \"Dados são representações brutas de fatos, como números, nomes, imagens ou medições, que sozinhos não transmitem significado. Eles são a matéria-prima para a geração de informações.\"\n}, {\n  question: \"O que é informação?\",\n  answer: \"Informação é o resultado da análise, processamento ou combinação de dados, fornecendo significado, contexto e utilidade para tomada de decisões.\"\n}, {\n  question: \"O que é um banco de dados?\",\n  answer: \"Um banco de dados é uma coleção organizada de dados persistentes, estruturados para permitir armazenamento, consulta, manipulação e recuperação eficientes de informações.\"\n}, {\n  question: \"O que é um SGBD?\",\n  answer: \"Sistema de Gerenciamento de Banco de Dados (SGBD) é o software responsável por criar, gerenciar, armazenar, consultar e proteger os dados em um banco de dados de maneira eficiente e segura.\"\n}, {\n  question: \"Quais os níveis de abstração de um BD?\",\n  answer: \"Os níveis de abstração são: Conceitual (foca no significado dos dados), Lógico (organiza dados e seus relacionamentos) e Físico (detalha como os dados são armazenados no sistema).\"\n}, {\n  question: \"O que é uma transação?\",\n  answer: \"Transação é uma sequência de operações em um banco de dados que juntas formam uma tarefa lógica completa, como uma transferência bancária, respeitando propriedades de integridade.\"\n}, {\n  question: \"O que significa ACID?\",\n  answer: \"ACID é um conjunto de propriedades fundamentais das transações: Atomicidade, Consistência, Isolamento e Durabilidade, que garantem a confiabilidade e integridade dos dados.\"\n}, {\n  question: \"Defina Atomicidade\",\n  answer: \"Atomicidade garante que todas as operações de uma transação sejam realizadas completamente ou, em caso de falha, nenhuma operação tenha efeito.\"\n}, {\n  question: \"Defina Consistência\",\n  answer: \"Consistência assegura que o banco de dados passe de um estado válido para outro também válido após a conclusão de uma transação.\"\n}, {\n  question: \"Defina Isolamento\",\n  answer: \"Isolamento garante que a execução simultânea de múltiplas transações ocorra de forma independente, sem que uma interfira no resultado da outra.\"\n}, {\n  question: \"Defina Durabilidade\",\n  answer: \"Durabilidade assegura que uma vez confirmada, a transação terá seus efeitos permanentemente gravados no banco, mesmo diante de falhas ou quedas de energia.\"\n}, {\n  question: \"O que é uma entidade?\",\n  answer: \"Uma entidade é qualquer objeto ou conceito do mundo real que pode ser representado e armazenado no banco de dados, como uma Pessoa, Produto ou Evento.\"\n}, {\n  question: \"O que é uma entidade forte?\",\n  answer: \"Entidade forte é aquela que existe independentemente de outras entidades e possui seu próprio atributo identificador único.\"\n}, {\n  question: \"O que é uma entidade fraca?\",\n  answer: \"Entidade fraca é aquela que depende de uma entidade forte para existir e para ser identificada, geralmente possuindo uma chave parcial.\"\n}, {\n  question: \"O que é um relacionamento?\",\n  answer: \"Relacionamento é a associação lógica entre duas ou mais entidades, representando como elas se interagem no contexto do banco de dados.\"\n}, {\n  question: \"O que é um relacionamento identificador?\",\n  answer: \"Relacionamento identificador ocorre quando uma entidade fraca depende de uma entidade forte para sua identificação, reforçando seu vínculo de existência.\"\n}, {\n  question: \"O que é cardinalidade?\",\n  answer: \"Cardinalidade define o número mínimo e máximo de associações entre entidades, podendo ser 1:1, 1:N ou N:N em um relacionamento.\"\n}, {\n  question: \"O que é um atributo?\",\n  answer: \"Atributo é uma característica ou propriedade que descreve uma entidade ou um relacionamento, como 'nome', 'data de nascimento' ou 'preço'.\"\n}, {\n  question: \"O que é um atributo identificador?\",\n  answer: \"Atributo identificador é aquele que distingue de forma única cada ocorrência de uma entidade, como um CPF, RA ou número de matrícula.\"\n}, {\n  question: \"O que é um atributo composto?\",\n  answer: \"Atributo composto é aquele formado por vários subatributos que juntos detalham melhor uma informação, como um endereço dividido em rua, cidade e CEP.\"\n}, {\n  question: \"O que é um atributo multivalorado?\",\n  answer: \"Atributo multivalorado é aquele que pode ter vários valores para uma mesma entidade, como vários telefones para uma única pessoa.\"\n}, {\n  question: \"O que é generalização e especialização?\",\n  answer: \"Generalização agrupa entidades específicas em uma entidade genérica, enquanto especialização cria novas entidades mais específicas a partir de uma entidade genérica.\"\n}, {\n  question: \"O que são dados persistentes?\",\n  answer: \"Dados persistentes são aqueles que continuam existindo e armazenados após o fim da aplicação ou sessão, até que sejam explicitamente removidos.\"\n}, {\n  question: \"O que é um esquema de banco de dados?\",\n  answer: \"Esquema é a estrutura formal que define a organização dos dados, como tabelas, campos e relacionamentos, sendo o projeto lógico do banco de dados.\"\n}, {\n  question: \"O que é uma instância de banco de dados?\",\n  answer: \"Instância é o conjunto atual de dados armazenados em um banco de dados em um determinado momento, podendo mudar conforme operações de inserção, atualização ou remoção.\"\n}, {\n  question: \"O que é um modelo de dados?\",\n  answer: \"Modelo de dados é um conjunto de ferramentas conceituais utilizadas para descrever a estrutura dos dados, suas relações e restrições de integridade.\"\n}, {\n  question: \"Qual a diferença entre modelo conceitual, lógico e físico?\",\n  answer: \"O modelo conceitual representa a visão de alto nível (significado dos dados), o modelo lógico organiza os dados para sistemas de SGBD, e o modelo físico descreve como os dados são armazenados fisicamente.\"\n}, {\n  question: \"O que é um relacionamento ternário?\",\n  answer: \"Relacionamento ternário é uma associação que envolve simultaneamente três diferentes entidades, como a relação entre um aluno, uma disciplina e um professor.\"\n}, {\n  question: \"O que é um auto-relacionamento?\",\n  answer: \"Auto-relacionamento é quando uma entidade se relaciona consigo mesma, como funcionários que chefiam outros funcionários na mesma tabela.\"\n}, {\n  question: \"Qual é a função do controle de concorrência em SGBDs?\",\n  answer: \"O controle de concorrência assegura que múltiplas transações simultâneas no banco de dados sejam executadas corretamente, preservando a consistência e evitando conflitos.\"\n}, {\n  question: \"Qual a origem da palavra 'banco' no termo Banco de Dados?\",\n  answer: \"A palavra 'banco' vem do germânico 'Banka' (mesa), usada na Itália para transações financeiras, e foi adaptada para significar o local de armazenamento de dados.\"\n}, {\n  question: \"O que são atributos simples?\",\n  answer: \"Atributos simples são aqueles que armazenam apenas um valor atômico, indivisível, como CPF ou nome de uma pessoa.\"\n}];\nexport default function FlashcardsApp() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(false);\n  const [quizResults, setQuizResults] = useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [randomizedIndices, setRandomizedIndices] = useState([]);\n  const [quizIndex, setQuizIndex] = useState(0);\n\n  // Estatísticas de Estudo\n  const [statistics, setStatistics] = useState({\n    totalStudied: 0,\n    correctAnswers: 0,\n    incorrectAnswers: 0,\n    studyTime: 0,\n    lastStudyDate: null,\n    streak: 0\n  });\n\n  // Para timer de estudo\n  const [studyTime, setStudyTime] = useState(0);\n  const [studyStartTime, setStudyStartTime] = useState(null);\n  const [showStats, setShowStats] = useState(false);\n\n  // Formatar tempo (segundos -> MM:SS)\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Função para embaralhar um array\n  const shuffleArray = array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Envolver funções com useCallback\n  const generateOptions = useCallback(cardIndex => {\n    const correctAnswer = flashcards[cardIndex].answer;\n\n    // Coletar todas as respostas incorretas possíveis\n    const incorrectAnswers = flashcards.filter((_, i) => i !== cardIndex).map(card => card.answer);\n\n    // Selecionar 3 respostas incorretas aleatoriamente\n    const randomIncorrectAnswers = shuffleArray(incorrectAnswers).slice(0, 3);\n\n    // Combinar resposta correta com as incorretas e embaralhar\n    const allOptions = shuffleArray([correctAnswer, ...randomIncorrectAnswers]);\n    setOptions(allOptions);\n    setSelectedOption(null);\n    setIsCorrect(null);\n  }, []); // Como flashcards é constante, não precisa ser dependência\n\n  // Iniciar o modo de quiz\n  const startQuizMode = useCallback(() => {\n    setIsQuizMode(true);\n    setQuizResults({\n      correct: 0,\n      incorrect: 0\n    });\n    setQuizCompleted(false);\n\n    // Criar array de índices e embaralhá-lo\n    const indices = Array.from({\n      length: flashcards.length\n    }, (_, i) => i);\n    const shuffledIndices = shuffleArray([...indices]);\n    setRandomizedIndices(shuffledIndices);\n    setQuizIndex(0);\n\n    // Usar o primeiro índice aleatório para a primeira questão\n    generateOptions(shuffledIndices[0]);\n\n    // Limpar qualquer informação de conclusão anterior\n    localStorage.setItem('quiz-completed', 'false');\n  }, [generateOptions]); // Adicione generateOptions como dependência\n\n  // Lidar com a resposta selecionada\n  const handleAnswer = useCallback(selectedOption => {\n    setSelectedOption(selectedOption);\n    const currentCardIndex = randomizedIndices[quizIndex];\n    const correctAnswer = flashcards[currentCardIndex].answer;\n    const isAnswerCorrect = selectedOption === correctAnswer;\n    setIsCorrect(isAnswerCorrect);\n\n    // Atualizar resultados do quiz\n    if (isAnswerCorrect) {\n      setQuizResults(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setQuizResults(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Aguardar um tempo para mostrar se a resposta está correta ou não\n    setTimeout(() => {\n      // Avançar para a próxima questão ou finalizar o quiz\n      if (quizIndex + 1 < randomizedIndices.length) {\n        setQuizIndex(prev => prev + 1);\n        const nextIndex = quizIndex + 1;\n        generateOptions(randomizedIndices[nextIndex]);\n      } else {\n        setQuizCompleted(true);\n      }\n      setSelectedOption(null);\n      setIsCorrect(null);\n    }, 1000);\n  }, [quizIndex, randomizedIndices, generateOptions]); // Adicione as dependências\n\n  // Sair do modo de quiz\n  const exitQuizMode = useCallback(() => {\n    setIsQuizMode(false);\n    setQuizCompleted(false);\n    setQuizIndex(0);\n    setRandomizedIndices([]);\n    setSelectedOption(null);\n    setIsCorrect(null);\n  }, []);\n\n  // ----- MELHORIAS DE INTERFACE -----\n\n  // Timer para modo de estudo\n  useEffect(() => {\n    let timer;\n    if (!isQuizMode && !quizCompleted) {\n      // Iniciar timer quando não estiver em modo prova\n      timer = setInterval(() => {\n        setStudyTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isQuizMode, quizCompleted]);\n\n  // ----- SUPORTE A ATALHOS DE TECLADO -----\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (!isQuizMode) {\n        // Atalhos para modo normal\n        if (e.key === ' ' || e.code === 'Space') {\n          e.preventDefault(); // Prevenir scroll\n          setShowAnswer(!showAnswer);\n        } else if (e.key === 'ArrowLeft' && index > 0) {\n          setIndex(prev => prev - 1);\n          setShowAnswer(false);\n        } else if (e.key === 'ArrowRight' && index < flashcards.length - 1) {\n          setIndex(prev => prev + 1);\n          setShowAnswer(false);\n        } else if (e.key === 'q' || e.key === 'Q') {\n          startQuizMode();\n        }\n      } else if (isQuizMode && !quizCompleted && selectedOption === null) {\n        // Atalhos para modo quiz\n        const optionKeys = ['1', '2', '3', '4'];\n        const optionIndex = optionKeys.indexOf(e.key);\n        if (optionIndex >= 0 && optionIndex < options.length) {\n          handleAnswer(options[optionIndex]);\n        } else if (e.key === 'Escape') {\n          exitQuizMode();\n        }\n      } else if (quizCompleted) {\n        // Atalhos para tela de resultados\n        if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ') {\n          exitQuizMode();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [showAnswer, index, isQuizMode, quizCompleted, options, selectedOption, handleAnswer, startQuizMode, exitQuizMode]);\n\n  // ----- ESTATÍSTICAS DE ESTUDO -----\n\n  // Carregar estatísticas do localStorage\n  useEffect(() => {\n    const savedStats = localStorage.getItem('study-statistics');\n    if (savedStats) {\n      setStatistics(JSON.parse(savedStats));\n    }\n\n    // Iniciar timer de estudo\n    setStudyStartTime(new Date());\n  }, []);\n\n  // Salvar estatísticas no localStorage\n  useEffect(() => {\n    localStorage.setItem('study-statistics', JSON.stringify(statistics));\n  }, [statistics]);\n\n  // Atualizar streak diário e estatísticas ao sair\n  useEffect(() => {\n    const updateStatisticsOnExit = () => {\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const lastDate = statistics.lastStudyDate ? new Date(statistics.lastStudyDate) : null;\n\n      // Calcular tempo de estudo desta sessão\n      const sessionTime = Math.floor((now - studyStartTime) / 1000);\n\n      // Verificar streak (dias consecutivos)\n      let newStreak = statistics.streak;\n      if (lastDate) {\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        if (lastDate.getTime() === yesterday.getTime()) {\n          newStreak++; // Estudou ontem, aumenta streak\n        } else if (lastDate.getTime() !== today.getTime()) {\n          newStreak = 1; // Não estudou ontem nem hoje ainda, reinicia streak\n        }\n      } else {\n        newStreak = 1; // Primeira vez estudando\n      }\n      setStatistics(prev => ({\n        ...prev,\n        studyTime: prev.studyTime + sessionTime,\n        lastStudyDate: today.toISOString(),\n        streak: newStreak\n      }));\n    };\n\n    // Atualizar estatísticas quando o componente for desmontado\n    window.addEventListener('beforeunload', updateStatisticsOnExit);\n    return () => {\n      window.removeEventListener('beforeunload', updateStatisticsOnExit);\n      updateStatisticsOnExit(); // Também atualizar ao desmontar o componente\n    };\n  }, [statistics.lastStudyDate, statistics.streak, studyStartTime]);\n\n  // Atualizar estatísticas quando completar um quiz\n  useEffect(() => {\n    if (quizCompleted) {\n      setStatistics(prev => ({\n        ...prev,\n        totalStudied: prev.totalStudied + quizResults.correct + quizResults.incorrect,\n        correctAnswers: prev.correctAnswers + quizResults.correct,\n        incorrectAnswers: prev.incorrectAnswers + quizResults.incorrect\n      }));\n    }\n  }, [quizCompleted, quizResults]);\n\n  // ----- PERSISTÊNCIA DE DADOS -----\n\n  // Carregar dados do localStorage ao iniciar o aplicativo\n  useEffect(() => {\n    // Carregar último índice visualizado\n    const savedIndex = localStorage.getItem('flashcard-index');\n    if (savedIndex) setIndex(parseInt(savedIndex));\n\n    // Carregar resultados de quiz anteriores\n    const savedResults = localStorage.getItem('quiz-results');\n    if (savedResults) setQuizResults(JSON.parse(savedResults));\n\n    // Carregar preferência de mostrar resposta\n    const savedShowAnswer = localStorage.getItem('show-answer');\n    if (savedShowAnswer) setShowAnswer(savedShowAnswer === 'true');\n\n    // Carregar progresso do quiz se houver um em andamento\n    const inQuizMode = localStorage.getItem('quiz-mode') === 'true';\n    if (inQuizMode) {\n      const savedRandomIndices = localStorage.getItem('random-indices');\n      const savedQuizIndex = localStorage.getItem('quiz-index');\n      const quizCompleted = localStorage.getItem('quiz-completed') === 'true';\n      if (savedRandomIndices && savedQuizIndex && !quizCompleted) {\n        setIsQuizMode(true);\n        setRandomizedIndices(JSON.parse(savedRandomIndices));\n        setQuizIndex(parseInt(savedQuizIndex));\n        generateOptions(JSON.parse(savedRandomIndices)[parseInt(savedQuizIndex)]);\n      }\n    }\n  }, [generateOptions]);\n\n  // Salvar índice atual quando mudar\n  useEffect(() => {\n    localStorage.setItem('flashcard-index', index);\n  }, [index]);\n\n  // Salvar preferência de mostrar resposta\n  useEffect(() => {\n    localStorage.setItem('show-answer', showAnswer);\n  }, [showAnswer]);\n\n  // Salvar resultados do quiz\n  useEffect(() => {\n    localStorage.setItem('quiz-results', JSON.stringify(quizResults));\n  }, [quizResults]);\n\n  // Salvar estado do modo quiz\n  useEffect(() => {\n    localStorage.setItem('quiz-mode', isQuizMode);\n    // Se sair do modo quiz, limpa dados relacionados\n    if (!isQuizMode) {\n      localStorage.removeItem('random-indices');\n      localStorage.removeItem('quiz-index');\n      localStorage.removeItem('quiz-completed');\n    }\n  }, [isQuizMode]);\n\n  // Salvar índices aleatórios e índice atual do quiz\n  useEffect(() => {\n    if (isQuizMode && randomizedIndices.length > 0) {\n      localStorage.setItem('random-indices', JSON.stringify(randomizedIndices));\n    }\n  }, [isQuizMode, randomizedIndices]);\n  useEffect(() => {\n    if (isQuizMode) {\n      localStorage.setItem('quiz-index', quizIndex);\n    }\n  }, [isQuizMode, quizIndex]);\n\n  // Salvar estado de conclusão do quiz\n  useEffect(() => {\n    localStorage.setItem('quiz-completed', quizCompleted);\n  }, [quizCompleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"sm\",\n        onClick: () => setShowStats(!showStats),\n        className: \"text-xs\",\n        children: \"Estat\\xEDsticas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), !isQuizMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-600 h-2 rounded-full transition-all duration-300\",\n        style: {\n          width: `${(index + 1) / flashcards.length * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this), isQuizMode && !quizCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-600 h-2 rounded-full transition-all duration-300\",\n        style: {\n          width: `${(quizIndex + 1) / randomizedIndices.length * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this), !isQuizMode && !showStats && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-xl text-center shadow-xl\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: flashcards[index].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-lg\",\n            children: flashcards[index].answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: () => setShowAnswer(!showAnswer),\n          children: [showAnswer ? \"Esconder Resposta\" : \"Mostrar Resposta\", \" (ESPA\\xC7O)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: () => {\n            setIndex(Math.max(0, index - 1));\n            setShowAnswer(false);\n          },\n          disabled: index === 0,\n          children: \"Anterior (\\u2190)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: () => {\n            setIndex(Math.min(flashcards.length - 1, index + 1));\n            setShowAnswer(false);\n          },\n          disabled: index === flashcards.length - 1,\n          children: \"Pr\\xF3ximo (\\u2192)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"default\",\n          onClick: startQuizMode,\n          children: \"Modo Prova (Q)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 dark:text-gray-400\",\n        children: [\"Card \", index + 1, \" de \", flashcards.length, \" | Tempo de estudo: \", formatTime(studyTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showStats && !isQuizMode && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-xl shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-center\",\n          children: \"Estat\\xEDsticas de Estudo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"Dias consecutivos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold\",\n              children: statistics.streak\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"Total estudado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold\",\n              children: statistics.totalStudied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"Acertos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-green-600\",\n              children: statistics.correctAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"Erros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-red-600\",\n              children: statistics.incorrectAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"Tempo de estudo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold\",\n              children: formatTime(statistics.studyTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-sm text-gray-500 dark:text-gray-400\",\n              children: \"\\xDAltimo estudo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl font-bold\",\n              children: statistics.lastStudyDate ? new Date(statistics.lastStudyDate).toLocaleDateString() : 'Hoje'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"default\",\n          className: \"w-full mt-4\",\n          onClick: () => setShowStats(false),\n          children: \"Voltar ao Estudo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this), isQuizMode && !quizCompleted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-xl text-center shadow-xl\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: flashcards[randomizedIndices[quizIndex]].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: options.map((option, i) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: () => handleAnswer(option),\n              className: `text-left px-4 py-3 md:text-center ${selectedOption === option ? isCorrect ? \"bg-green-500 text-white\" : \"bg-red-500 text-white\" : \"\"}`,\n              disabled: selectedOption !== null,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-2 inline-block px-1.5 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), \" \", option]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 dark:text-gray-400\",\n        children: [\"Quest\\xE3o \", quizIndex + 1, \" de \", randomizedIndices.length, \" | ESC para sair\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), quizCompleted && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-xl text-center shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6\",\n          children: \"Resultados do Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 dark:bg-green-900 p-4 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-green-800 dark:text-green-100\",\n              children: \"Acertos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-green-600 dark:text-green-200\",\n              children: quizResults.correct\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-100 dark:bg-red-900 p-4 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-red-800 dark:text-red-100\",\n              children: \"Erros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-red-600 dark:text-red-200\",\n              children: quizResults.incorrect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Aproveitamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-600 h-4 rounded-full transition-all duration-500\",\n              style: {\n                width: `${quizResults.correct / (quizResults.correct + quizResults.incorrect) * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-lg font-bold\",\n            children: [Math.round(quizResults.correct / (quizResults.correct + quizResults.incorrect) * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"default\",\n          onClick: exitQuizMode,\n          children: \"Sair do Modo Prova (ESC ou ENTER)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardsApp, \"yMkGExO0woF1OPIJmTi/Y+zdFKk=\");\n_c = FlashcardsApp;\nvar _c;\n$RefreshReg$(_c, \"FlashcardsApp\");","map":{"version":3,"names":["useState","useEffect","useCallback","Card","CardContent","Button","ThemeToggle","jsxDEV","_jsxDEV","Fragment","_Fragment","flashcards","question","answer","FlashcardsApp","_s","index","setIndex","showAnswer","setShowAnswer","isQuizMode","setIsQuizMode","quizResults","setQuizResults","correct","incorrect","quizCompleted","setQuizCompleted","options","setOptions","selectedOption","setSelectedOption","isCorrect","setIsCorrect","randomizedIndices","setRandomizedIndices","quizIndex","setQuizIndex","statistics","setStatistics","totalStudied","correctAnswers","incorrectAnswers","studyTime","lastStudyDate","streak","setStudyTime","studyStartTime","setStudyStartTime","showStats","setShowStats","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","shuffleArray","array","shuffled","i","length","j","random","generateOptions","cardIndex","correctAnswer","filter","_","map","card","randomIncorrectAnswers","slice","allOptions","startQuizMode","indices","Array","from","shuffledIndices","localStorage","setItem","handleAnswer","currentCardIndex","isAnswerCorrect","prev","setTimeout","nextIndex","exitQuizMode","timer","setInterval","clearInterval","handleKeyDown","e","key","code","preventDefault","optionKeys","optionIndex","indexOf","window","addEventListener","removeEventListener","savedStats","getItem","JSON","parse","Date","stringify","updateStatisticsOnExit","now","today","getFullYear","getMonth","getDate","lastDate","sessionTime","newStreak","yesterday","setDate","getTime","toISOString","savedIndex","parseInt","savedResults","savedShowAnswer","inQuizMode","savedRandomIndices","savedQuizIndex","removeItem","className","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","max","disabled","min","toLocaleDateString","option","round","_c","$RefreshReg$"],"sources":["C:/Users/jonat/OneDrive/Documentos/Projetos Pessoais/Flashcards/flashcards/src/FlashcardsApp.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { Card, CardContent } from \"./components/ui/card\";\r\nimport { Button } from \"./components/ui/button\";\r\nimport ThemeToggle from \"./components/ui/ThemeToggle\";\r\n\r\nconst flashcards = [\r\n  {\r\n    question: \"O que são dados?\",\r\n    answer: \"Dados são representações brutas de fatos, como números, nomes, imagens ou medições, que sozinhos não transmitem significado. Eles são a matéria-prima para a geração de informações.\",\r\n  },\r\n  {\r\n    question: \"O que é informação?\",\r\n    answer: \"Informação é o resultado da análise, processamento ou combinação de dados, fornecendo significado, contexto e utilidade para tomada de decisões.\",\r\n  },\r\n  {\r\n    question: \"O que é um banco de dados?\",\r\n    answer: \"Um banco de dados é uma coleção organizada de dados persistentes, estruturados para permitir armazenamento, consulta, manipulação e recuperação eficientes de informações.\",\r\n  },\r\n  {\r\n    question: \"O que é um SGBD?\",\r\n    answer: \"Sistema de Gerenciamento de Banco de Dados (SGBD) é o software responsável por criar, gerenciar, armazenar, consultar e proteger os dados em um banco de dados de maneira eficiente e segura.\",\r\n  },\r\n  {\r\n    question: \"Quais os níveis de abstração de um BD?\",\r\n    answer: \"Os níveis de abstração são: Conceitual (foca no significado dos dados), Lógico (organiza dados e seus relacionamentos) e Físico (detalha como os dados são armazenados no sistema).\",\r\n  },\r\n  {\r\n    question: \"O que é uma transação?\",\r\n    answer: \"Transação é uma sequência de operações em um banco de dados que juntas formam uma tarefa lógica completa, como uma transferência bancária, respeitando propriedades de integridade.\",\r\n  },\r\n  {\r\n    question: \"O que significa ACID?\",\r\n    answer: \"ACID é um conjunto de propriedades fundamentais das transações: Atomicidade, Consistência, Isolamento e Durabilidade, que garantem a confiabilidade e integridade dos dados.\",\r\n  },\r\n  {\r\n    question: \"Defina Atomicidade\",\r\n    answer: \"Atomicidade garante que todas as operações de uma transação sejam realizadas completamente ou, em caso de falha, nenhuma operação tenha efeito.\",\r\n  },\r\n  {\r\n    question: \"Defina Consistência\",\r\n    answer: \"Consistência assegura que o banco de dados passe de um estado válido para outro também válido após a conclusão de uma transação.\",\r\n  },\r\n  {\r\n    question: \"Defina Isolamento\",\r\n    answer: \"Isolamento garante que a execução simultânea de múltiplas transações ocorra de forma independente, sem que uma interfira no resultado da outra.\",\r\n  },\r\n  {\r\n    question: \"Defina Durabilidade\",\r\n    answer: \"Durabilidade assegura que uma vez confirmada, a transação terá seus efeitos permanentemente gravados no banco, mesmo diante de falhas ou quedas de energia.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade?\",\r\n    answer: \"Uma entidade é qualquer objeto ou conceito do mundo real que pode ser representado e armazenado no banco de dados, como uma Pessoa, Produto ou Evento.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade forte?\",\r\n    answer: \"Entidade forte é aquela que existe independentemente de outras entidades e possui seu próprio atributo identificador único.\",\r\n  },\r\n  {\r\n    question: \"O que é uma entidade fraca?\",\r\n    answer: \"Entidade fraca é aquela que depende de uma entidade forte para existir e para ser identificada, geralmente possuindo uma chave parcial.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento?\",\r\n    answer: \"Relacionamento é a associação lógica entre duas ou mais entidades, representando como elas se interagem no contexto do banco de dados.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento identificador?\",\r\n    answer: \"Relacionamento identificador ocorre quando uma entidade fraca depende de uma entidade forte para sua identificação, reforçando seu vínculo de existência.\",\r\n  },\r\n  {\r\n    question: \"O que é cardinalidade?\",\r\n    answer: \"Cardinalidade define o número mínimo e máximo de associações entre entidades, podendo ser 1:1, 1:N ou N:N em um relacionamento.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo?\",\r\n    answer: \"Atributo é uma característica ou propriedade que descreve uma entidade ou um relacionamento, como 'nome', 'data de nascimento' ou 'preço'.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo identificador?\",\r\n    answer: \"Atributo identificador é aquele que distingue de forma única cada ocorrência de uma entidade, como um CPF, RA ou número de matrícula.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo composto?\",\r\n    answer: \"Atributo composto é aquele formado por vários subatributos que juntos detalham melhor uma informação, como um endereço dividido em rua, cidade e CEP.\",\r\n  },\r\n  {\r\n    question: \"O que é um atributo multivalorado?\",\r\n    answer: \"Atributo multivalorado é aquele que pode ter vários valores para uma mesma entidade, como vários telefones para uma única pessoa.\",\r\n  },\r\n  {\r\n    question: \"O que é generalização e especialização?\",\r\n    answer: \"Generalização agrupa entidades específicas em uma entidade genérica, enquanto especialização cria novas entidades mais específicas a partir de uma entidade genérica.\",\r\n  },\r\n  {\r\n    question: \"O que são dados persistentes?\",\r\n    answer: \"Dados persistentes são aqueles que continuam existindo e armazenados após o fim da aplicação ou sessão, até que sejam explicitamente removidos.\",\r\n  },\r\n  {\r\n    question: \"O que é um esquema de banco de dados?\",\r\n    answer: \"Esquema é a estrutura formal que define a organização dos dados, como tabelas, campos e relacionamentos, sendo o projeto lógico do banco de dados.\",\r\n  },\r\n  {\r\n    question: \"O que é uma instância de banco de dados?\",\r\n    answer: \"Instância é o conjunto atual de dados armazenados em um banco de dados em um determinado momento, podendo mudar conforme operações de inserção, atualização ou remoção.\",\r\n  },\r\n  {\r\n    question: \"O que é um modelo de dados?\",\r\n    answer: \"Modelo de dados é um conjunto de ferramentas conceituais utilizadas para descrever a estrutura dos dados, suas relações e restrições de integridade.\",\r\n  },\r\n  {\r\n    question: \"Qual a diferença entre modelo conceitual, lógico e físico?\",\r\n    answer: \"O modelo conceitual representa a visão de alto nível (significado dos dados), o modelo lógico organiza os dados para sistemas de SGBD, e o modelo físico descreve como os dados são armazenados fisicamente.\",\r\n  },\r\n  {\r\n    question: \"O que é um relacionamento ternário?\",\r\n    answer: \"Relacionamento ternário é uma associação que envolve simultaneamente três diferentes entidades, como a relação entre um aluno, uma disciplina e um professor.\",\r\n  },\r\n  {\r\n    question: \"O que é um auto-relacionamento?\",\r\n    answer: \"Auto-relacionamento é quando uma entidade se relaciona consigo mesma, como funcionários que chefiam outros funcionários na mesma tabela.\",\r\n  },\r\n  {\r\n    question: \"Qual é a função do controle de concorrência em SGBDs?\",\r\n    answer: \"O controle de concorrência assegura que múltiplas transações simultâneas no banco de dados sejam executadas corretamente, preservando a consistência e evitando conflitos.\",\r\n  },\r\n  {\r\n    question: \"Qual a origem da palavra 'banco' no termo Banco de Dados?\",\r\n    answer: \"A palavra 'banco' vem do germânico 'Banka' (mesa), usada na Itália para transações financeiras, e foi adaptada para significar o local de armazenamento de dados.\",\r\n  },\r\n  {\r\n    question: \"O que são atributos simples?\",\r\n    answer: \"Atributos simples são aqueles que armazenam apenas um valor atômico, indivisível, como CPF ou nome de uma pessoa.\",\r\n  },\r\n];\r\n\r\nexport default function FlashcardsApp() {\r\n  const [index, setIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isQuizMode, setIsQuizMode] = useState(false);\r\n  const [quizResults, setQuizResults] = useState({ correct: 0, incorrect: 0 });\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [randomizedIndices, setRandomizedIndices] = useState([]);\r\n  const [quizIndex, setQuizIndex] = useState(0);\r\n  \r\n  // Estatísticas de Estudo\r\n  const [statistics, setStatistics] = useState({\r\n    totalStudied: 0,\r\n    correctAnswers: 0,\r\n    incorrectAnswers: 0,\r\n    studyTime: 0,\r\n    lastStudyDate: null,\r\n    streak: 0\r\n  });\r\n  \r\n  // Para timer de estudo\r\n  const [studyTime, setStudyTime] = useState(0);\r\n  const [studyStartTime, setStudyStartTime] = useState(null);\r\n  const [showStats, setShowStats] = useState(false);\r\n  \r\n  // Formatar tempo (segundos -> MM:SS)\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Função para embaralhar um array\r\n  const shuffleArray = (array) => {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n\r\n  // Envolver funções com useCallback\r\n  const generateOptions = useCallback((cardIndex) => {\r\n    const correctAnswer = flashcards[cardIndex].answer;\r\n    \r\n    // Coletar todas as respostas incorretas possíveis\r\n    const incorrectAnswers = flashcards\r\n      .filter((_, i) => i !== cardIndex)\r\n      .map((card) => card.answer);\r\n    \r\n    // Selecionar 3 respostas incorretas aleatoriamente\r\n    const randomIncorrectAnswers = shuffleArray(incorrectAnswers).slice(0, 3);\r\n    \r\n    // Combinar resposta correta com as incorretas e embaralhar\r\n    const allOptions = shuffleArray([correctAnswer, ...randomIncorrectAnswers]);\r\n    \r\n    setOptions(allOptions);\r\n    setSelectedOption(null);\r\n    setIsCorrect(null);\r\n  }, []);  // Como flashcards é constante, não precisa ser dependência\r\n\r\n  // Iniciar o modo de quiz\r\n  const startQuizMode = useCallback(() => {\r\n    setIsQuizMode(true);\r\n    setQuizResults({ correct: 0, incorrect: 0 });\r\n    setQuizCompleted(false);\r\n    \r\n    // Criar array de índices e embaralhá-lo\r\n    const indices = Array.from({ length: flashcards.length }, (_, i) => i);\r\n    const shuffledIndices = shuffleArray([...indices]);\r\n    setRandomizedIndices(shuffledIndices);\r\n    setQuizIndex(0);\r\n    \r\n    // Usar o primeiro índice aleatório para a primeira questão\r\n    generateOptions(shuffledIndices[0]);\r\n    \r\n    // Limpar qualquer informação de conclusão anterior\r\n    localStorage.setItem('quiz-completed', 'false');\r\n  }, [generateOptions]);  // Adicione generateOptions como dependência\r\n\r\n  // Lidar com a resposta selecionada\r\n  const handleAnswer = useCallback((selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n    \r\n    const currentCardIndex = randomizedIndices[quizIndex];\r\n    const correctAnswer = flashcards[currentCardIndex].answer;\r\n    const isAnswerCorrect = selectedOption === correctAnswer;\r\n    \r\n    setIsCorrect(isAnswerCorrect);\r\n    \r\n    // Atualizar resultados do quiz\r\n    if (isAnswerCorrect) {\r\n      setQuizResults(prev => ({ ...prev, correct: prev.correct + 1 }));\r\n    } else {\r\n      setQuizResults(prev => ({ ...prev, incorrect: prev.incorrect + 1 }));\r\n    }\r\n    \r\n    // Aguardar um tempo para mostrar se a resposta está correta ou não\r\n    setTimeout(() => {\r\n      // Avançar para a próxima questão ou finalizar o quiz\r\n      if (quizIndex + 1 < randomizedIndices.length) {\r\n        setQuizIndex(prev => prev + 1);\r\n        const nextIndex = quizIndex + 1;\r\n        generateOptions(randomizedIndices[nextIndex]);\r\n      } else {\r\n        setQuizCompleted(true);\r\n      }\r\n      \r\n      setSelectedOption(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  }, [quizIndex, randomizedIndices, generateOptions]); // Adicione as dependências\r\n\r\n  // Sair do modo de quiz\r\n  const exitQuizMode = useCallback(() => {\r\n    setIsQuizMode(false);\r\n    setQuizCompleted(false);\r\n    setQuizIndex(0);\r\n    setRandomizedIndices([]);\r\n    setSelectedOption(null);\r\n    setIsCorrect(null);\r\n  }, []);\r\n  \r\n  // ----- MELHORIAS DE INTERFACE -----\r\n  \r\n  // Timer para modo de estudo\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!isQuizMode && !quizCompleted) {\r\n      // Iniciar timer quando não estiver em modo prova\r\n      timer = setInterval(() => {\r\n        setStudyTime(prev => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isQuizMode, quizCompleted]);\r\n  \r\n  // ----- SUPORTE A ATALHOS DE TECLADO -----\r\n  \r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (!isQuizMode) {\r\n        // Atalhos para modo normal\r\n        if (e.key === ' ' || e.code === 'Space') {\r\n          e.preventDefault(); // Prevenir scroll\r\n          setShowAnswer(!showAnswer);\r\n        } else if (e.key === 'ArrowLeft' && index > 0) {\r\n          setIndex(prev => prev - 1);\r\n          setShowAnswer(false);\r\n        } else if (e.key === 'ArrowRight' && index < flashcards.length - 1) {\r\n          setIndex(prev => prev + 1);\r\n          setShowAnswer(false);\r\n        } else if (e.key === 'q' || e.key === 'Q') {\r\n          startQuizMode();\r\n        }\r\n      } else if (isQuizMode && !quizCompleted && selectedOption === null) {\r\n        // Atalhos para modo quiz\r\n        const optionKeys = ['1', '2', '3', '4'];\r\n        const optionIndex = optionKeys.indexOf(e.key);\r\n        \r\n        if (optionIndex >= 0 && optionIndex < options.length) {\r\n          handleAnswer(options[optionIndex]);\r\n        } else if (e.key === 'Escape') {\r\n          exitQuizMode();\r\n        }\r\n      } else if (quizCompleted) {\r\n        // Atalhos para tela de resultados\r\n        if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ') {\r\n          exitQuizMode();\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [showAnswer, index, isQuizMode, quizCompleted, options, selectedOption, handleAnswer, startQuizMode, exitQuizMode]);\r\n  \r\n  // ----- ESTATÍSTICAS DE ESTUDO -----\r\n  \r\n  // Carregar estatísticas do localStorage\r\n  useEffect(() => {\r\n    const savedStats = localStorage.getItem('study-statistics');\r\n    if (savedStats) {\r\n      setStatistics(JSON.parse(savedStats));\r\n    }\r\n    \r\n    // Iniciar timer de estudo\r\n    setStudyStartTime(new Date());\r\n  }, []);\r\n  \r\n  // Salvar estatísticas no localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('study-statistics', JSON.stringify(statistics));\r\n  }, [statistics]);\r\n  \r\n  // Atualizar streak diário e estatísticas ao sair\r\n  useEffect(() => {\r\n    const updateStatisticsOnExit = () => {\r\n      const now = new Date();\r\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      const lastDate = statistics.lastStudyDate ? new Date(statistics.lastStudyDate) : null;\r\n      \r\n      // Calcular tempo de estudo desta sessão\r\n      const sessionTime = Math.floor((now - studyStartTime) / 1000);\r\n      \r\n      // Verificar streak (dias consecutivos)\r\n      let newStreak = statistics.streak;\r\n      if (lastDate) {\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        \r\n        if (lastDate.getTime() === yesterday.getTime()) {\r\n          newStreak++; // Estudou ontem, aumenta streak\r\n        } else if (lastDate.getTime() !== today.getTime()) {\r\n          newStreak = 1; // Não estudou ontem nem hoje ainda, reinicia streak\r\n        }\r\n      } else {\r\n        newStreak = 1; // Primeira vez estudando\r\n      }\r\n      \r\n      setStatistics(prev => ({\r\n        ...prev,\r\n        studyTime: prev.studyTime + sessionTime,\r\n        lastStudyDate: today.toISOString(),\r\n        streak: newStreak\r\n      }));\r\n    };\r\n    \r\n    // Atualizar estatísticas quando o componente for desmontado\r\n    window.addEventListener('beforeunload', updateStatisticsOnExit);\r\n    return () => {\r\n      window.removeEventListener('beforeunload', updateStatisticsOnExit);\r\n      updateStatisticsOnExit(); // Também atualizar ao desmontar o componente\r\n    };\r\n  }, [statistics.lastStudyDate, statistics.streak, studyStartTime]);\r\n  \r\n  // Atualizar estatísticas quando completar um quiz\r\n  useEffect(() => {\r\n    if (quizCompleted) {\r\n      setStatistics(prev => ({\r\n        ...prev,\r\n        totalStudied: prev.totalStudied + quizResults.correct + quizResults.incorrect,\r\n        correctAnswers: prev.correctAnswers + quizResults.correct,\r\n        incorrectAnswers: prev.incorrectAnswers + quizResults.incorrect\r\n      }));\r\n    }\r\n  }, [quizCompleted, quizResults]);\r\n  \r\n  // ----- PERSISTÊNCIA DE DADOS -----\r\n  \r\n  // Carregar dados do localStorage ao iniciar o aplicativo\r\n  useEffect(() => {\r\n    // Carregar último índice visualizado\r\n    const savedIndex = localStorage.getItem('flashcard-index');\r\n    if (savedIndex) setIndex(parseInt(savedIndex));\r\n    \r\n    // Carregar resultados de quiz anteriores\r\n    const savedResults = localStorage.getItem('quiz-results');\r\n    if (savedResults) setQuizResults(JSON.parse(savedResults));\r\n    \r\n    // Carregar preferência de mostrar resposta\r\n    const savedShowAnswer = localStorage.getItem('show-answer');\r\n    if (savedShowAnswer) setShowAnswer(savedShowAnswer === 'true');\r\n    \r\n    // Carregar progresso do quiz se houver um em andamento\r\n    const inQuizMode = localStorage.getItem('quiz-mode') === 'true';\r\n    if (inQuizMode) {\r\n      const savedRandomIndices = localStorage.getItem('random-indices');\r\n      const savedQuizIndex = localStorage.getItem('quiz-index');\r\n      const quizCompleted = localStorage.getItem('quiz-completed') === 'true';\r\n      \r\n      if (savedRandomIndices && savedQuizIndex && !quizCompleted) {\r\n        setIsQuizMode(true);\r\n        setRandomizedIndices(JSON.parse(savedRandomIndices));\r\n        setQuizIndex(parseInt(savedQuizIndex));\r\n        generateOptions(JSON.parse(savedRandomIndices)[parseInt(savedQuizIndex)]);\r\n      }\r\n    }\r\n  }, [generateOptions]);\r\n  \r\n  // Salvar índice atual quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('flashcard-index', index);\r\n  }, [index]);\r\n  \r\n  // Salvar preferência de mostrar resposta\r\n  useEffect(() => {\r\n    localStorage.setItem('show-answer', showAnswer);\r\n  }, [showAnswer]);\r\n  \r\n  // Salvar resultados do quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-results', JSON.stringify(quizResults));\r\n  }, [quizResults]);\r\n  \r\n  // Salvar estado do modo quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-mode', isQuizMode);\r\n    // Se sair do modo quiz, limpa dados relacionados\r\n    if (!isQuizMode) {\r\n      localStorage.removeItem('random-indices');\r\n      localStorage.removeItem('quiz-index');\r\n      localStorage.removeItem('quiz-completed');\r\n    }\r\n  }, [isQuizMode]);\r\n  \r\n  // Salvar índices aleatórios e índice atual do quiz\r\n  useEffect(() => {\r\n    if (isQuizMode && randomizedIndices.length > 0) {\r\n      localStorage.setItem('random-indices', JSON.stringify(randomizedIndices));\r\n    }\r\n  }, [isQuizMode, randomizedIndices]);\r\n  \r\n  useEffect(() => {\r\n    if (isQuizMode) {\r\n      localStorage.setItem('quiz-index', quizIndex);\r\n    }\r\n  }, [isQuizMode, quizIndex]);\r\n  \r\n  // Salvar estado de conclusão do quiz\r\n  useEffect(() => {\r\n    localStorage.setItem('quiz-completed', quizCompleted);\r\n  }, [quizCompleted]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center gap-4 p-4 bg-background text-foreground dark:bg-dark-background dark:text-dark-text-primary transition-colors duration-200\">\r\n      <div className=\"absolute top-4 right-4 flex items-center gap-2\">\r\n        <Button \r\n          variant=\"outline\" \r\n          size=\"sm\"\r\n          onClick={() => setShowStats(!showStats)}\r\n          className=\"text-xs\"\r\n        >\r\n          Estatísticas\r\n        </Button>\r\n        <ThemeToggle />\r\n      </div>\r\n\r\n      {/* Barra de progresso */}\r\n      {!isQuizMode && (\r\n        <div className=\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\">\r\n          <div \r\n            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\" \r\n            style={{ width: `${((index + 1) / flashcards.length) * 100}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {isQuizMode && !quizCompleted && (\r\n        <div className=\"w-full max-w-xl bg-gray-200 rounded-full h-2 dark:bg-gray-700 mb-2\">\r\n          <div \r\n            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\" \r\n            style={{ width: `${((quizIndex + 1) / randomizedIndices.length) * 100}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {!isQuizMode && !showStats && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">\r\n                {flashcards[index].question}\r\n              </h2>\r\n              {showAnswer && (\r\n                <p className=\"mt-4 text-lg\">{flashcards[index].answer}</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <div className=\"flex flex-wrap gap-2 justify-center\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setShowAnswer(!showAnswer)}\r\n            >\r\n              {showAnswer ? \"Esconder Resposta\" : \"Mostrar Resposta\"} (ESPAÇO)\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => {\r\n                setIndex(Math.max(0, index - 1));\r\n                setShowAnswer(false);\r\n              }}\r\n              disabled={index === 0}\r\n            >\r\n              Anterior (←)\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => {\r\n                setIndex(Math.min(flashcards.length - 1, index + 1));\r\n                setShowAnswer(false);\r\n              }}\r\n              disabled={index === flashcards.length - 1}\r\n            >\r\n              Próximo (→)\r\n            </Button>\r\n\r\n            <Button variant=\"default\" onClick={startQuizMode}>\r\n              Modo Prova (Q)\r\n            </Button>\r\n          </div>\r\n          \r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Card {index + 1} de {flashcards.length} | Tempo de estudo: {formatTime(studyTime)}\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      {showStats && !isQuizMode && (\r\n        <Card className=\"w-full max-w-xl shadow-xl\">\r\n          <CardContent className=\"p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Estatísticas de Estudo</h2>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Dias consecutivos</h3>\r\n                <p className=\"text-2xl font-bold\">{statistics.streak}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Total estudado</h3>\r\n                <p className=\"text-2xl font-bold\">{statistics.totalStudied}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Acertos</h3>\r\n                <p className=\"text-2xl font-bold text-green-600\">{statistics.correctAnswers}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Erros</h3>\r\n                <p className=\"text-2xl font-bold text-red-600\">{statistics.incorrectAnswers}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Tempo de estudo</h3>\r\n                <p className=\"text-2xl font-bold\">{formatTime(statistics.studyTime)}</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                <h3 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">Último estudo</h3>\r\n                <p className=\"text-xl font-bold\">\r\n                  {statistics.lastStudyDate \r\n                    ? new Date(statistics.lastStudyDate).toLocaleDateString() \r\n                    : 'Hoje'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <Button \r\n              variant=\"default\" \r\n              className=\"w-full mt-4\"\r\n              onClick={() => setShowStats(false)}\r\n            >\r\n              Voltar ao Estudo\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {isQuizMode && !quizCompleted && (\r\n        <>\r\n          <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n            <CardContent className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">\r\n                {flashcards[randomizedIndices[quizIndex]].question}\r\n              </h2>\r\n              <div className=\"flex flex-col gap-2\">\r\n                {options.map((option, i) => (\r\n                  <Button\r\n                    key={i}\r\n                    variant=\"outline\"\r\n                    onClick={() => handleAnswer(option)}\r\n                    className={`text-left px-4 py-3 md:text-center ${\r\n                      selectedOption === option\r\n                        ? isCorrect\r\n                          ? \"bg-green-500 text-white\"\r\n                          : \"bg-red-500 text-white\"\r\n                        : \"\"\r\n                    }`}\r\n                    disabled={selectedOption !== null}\r\n                  >\r\n                    <span className=\"mr-2 inline-block px-1.5 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\">\r\n                      {i + 1}\r\n                    </span>{\" \"}\r\n                    {option}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Questão {quizIndex + 1} de {randomizedIndices.length} | ESC para sair\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      {quizCompleted && (\r\n        <Card className=\"w-full max-w-xl text-center shadow-xl\">\r\n          <CardContent className=\"p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Resultados do Quiz</h2>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n              <div className=\"bg-green-100 dark:bg-green-900 p-4 rounded-md\">\r\n                <h3 className=\"font-medium text-green-800 dark:text-green-100\">Acertos</h3>\r\n                <p className=\"text-3xl font-bold text-green-600 dark:text-green-200\">\r\n                  {quizResults.correct}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"bg-red-100 dark:bg-red-900 p-4 rounded-md\">\r\n                <h3 className=\"font-medium text-red-800 dark:text-red-100\">Erros</h3>\r\n                <p className=\"text-3xl font-bold text-red-600 dark:text-red-200\">\r\n                  {quizResults.incorrect}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <h3 className=\"font-medium mb-2\">Aproveitamento</h3>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700\">\r\n                <div \r\n                  className=\"bg-green-600 h-4 rounded-full transition-all duration-500\" \r\n                  style={{ \r\n                    width: `${(quizResults.correct / (quizResults.correct + quizResults.incorrect)) * 100}%` \r\n                  }}\r\n                />\r\n              </div>\r\n              <p className=\"mt-2 text-lg font-bold\">\r\n                {Math.round((quizResults.correct / (quizResults.correct + quizResults.incorrect)) * 100)}%\r\n              </p>\r\n            </div>\r\n            \r\n            <Button variant=\"default\" onClick={exitQuizMode}>\r\n              Sair do Modo Prova (ESC ou ENTER)\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}